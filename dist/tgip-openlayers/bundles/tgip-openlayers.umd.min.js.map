{"version":3,"sources":["ng://tgip-openlayers/lib/controls/full-screen/full-screen.component.ts","ng://tgip-openlayers/lib/controls/full-extent/full-extent.component.ts","ng://tgip-openlayers/lib/controls/switcher-map/switcher-map.component.ts","ng://tgip-openlayers/lib/controls/zoom-map/zoom-map.component.ts","ng://tgip-openlayers/lib/map/map.component.ts","ng://tgip-openlayers/lib/controls/layer-control-pc1/layer-control-pc1.component.ts","ng://tgip-openlayers/lib/controls/layer-control-pc2/layer-control-pc2.component.ts","ng://tgip-openlayers/lib/controls/layer-control-pc3/layer-control-pc3.component.ts","ng://tgip-openlayers/lib/layers/point-layer/point-layer.component.ts","ng://tgip-openlayers/lib/layers/line-layer/line-layer.component.ts","ng://tgip-openlayers/lib/layers/polygon-layer/polygon-layer.component.ts","ng://tgip-openlayers/lib/common/compass/compass.component.ts","ng://tgip-openlayers/lib/common/heatmap-legend/heatmap-legend.component.ts","ng://tgip-openlayers/lib/common/scenic-legend/scenic-legend.component.ts","ng://tgip-openlayers/lib/information-box/scenic-box/scenic-box.component.ts","ng://tgip-openlayers/lib/information-box/spot-box/spot-box.component.ts","ng://tgip-openlayers/lib/tgip-openlayers.module.ts"],"names":["FullScreenComponent","this","defaultConfig","className","fullscreen","on","off","icon","position","top","right","size","width","height","config","Object","defineProperty","prototype","_config","value","assign","ngOnInit","_this","subscription","fromEvent","document","subscribe","event","console","log","isNotFullscreen","ngOnDestroy","unsubscribe","ngOnChanges","changes","src","fullscreenToggle","elem","documentElement","exitFullscreen","requestFullscreen","msRequestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","Element","Component","args","selector","template","Input","FullExtentComponent","bottom","_map","fullExtentToggle","center","centerX","centerY","coordinateSystimSrid","ProjThree","ll2webmerc","map","animationPanZoom","coordinate","zoom","duration","warn","SwitcherMapComponent","outer","EventEmitter","backgroundSize","selectFontBgColor","bg","border","unselectFontBgColor","background","imgSize","fontStyle","color","fontSize","baseMap","title","visible","isdisplay","layer","item","emit","flag","forEach","mouseenter","mouseleave","Output","ZoomMapComponent","changeDetectorRef","left","zoomIn","zoomOut","disable","radius","cursor","uncursor","enable","bgStyle","backgroundrepeat","backgroundposition","backgroundsize","initMap","changeZoom","data","zoomByDelta","self","view","getView","e","maxZoom","getMaxZoom","minZoom","getMinZoom","getZoom","ChangeDetectorRef","ViewChild","MapComponent","hasInit","updateVisible","configUrl","mapParams","Map","target","View","getViewByHmapserver","xyzLayer","TileXYZLayer","getTileXYZLayerByHmapserver","addLayer","showClickCoordinate","removeLayer","LayerControlPc1Component","mySwiper","mutex","layers","direction","grabCursor","loop","slidesPerView","autoplay","speed","LayerControlPc2Component","LayerControlPc3Component","sum","hide","cmenuPosition","cmenutop","borderbottom","backgroundImg","cmenubody","borderradius","singleSize","padding","select","unselect","show","vanish","showitem","length","allitem","cancelitem","freeMode","scrollbar","el","mousewheel","PointLayerComponent","stateConfig","coordsField","_visible","_state","initLayer","pointLayer","setStyle","dataR","coordFieldConfig","wktField","ServiceUtil","ConvertPointsll2tmerc","_data","clearFeatures","addFeatures","PointLayer","layerName","infoTemplate","dataList","x","y","defaultStyle","Style","image","Icon","fill","Fill","stroke","Stroke","anchor","anchorXUnits","anchorYUnits","opacity","setVisible","LineLayerComponent","lineLayer","ConvertLinesll2tmerc","LineLayer","PolygonLayerComponent","polygonLayer","ConvertPolygonsll2tmerc","PolygonLayer","CompassComponent","HeatmapLegendComponent","ScenicLegendComponent","ScenicBoxComponent","_swiper","initSwiper","content","getElementById","container","closer","overlay","Overlay","element","autoPan","autoPanAnimation","onclick","setPosition","undefined","blur","addOverlay","evt","SpotBoxComponent","titleStyle","dataStyle","name","TgipOpenlayersModule","NgModule","declarations","imports","SwiperModule","providers","provide","SWIPER_CONFIG","useValue","Éµ0","exports"],"mappings":"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","sourcesContent":["\nimport {\n  Component,\n  OnInit,\n  Input,\n  SimpleChanges,\n  OnDestroy,\n  OnChanges\n} from '@angular/core';\nimport { fromEvent, Subscription } from 'rxjs';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'tgip-ol-full-screen',\n  templateUrl: './full-screen.component.html',\n  styleUrls: ['./full-screen.component.css']\n})\nexport class FullScreenComponent implements OnInit, OnDestroy, OnChanges {\n\n  @Input() configUrl: string;\n\n  private subscription: Subscription;\n  private _config: any;\n  get config(): any {\n    return this._config;\n  }\n   /**\n   * Ã¦Â Â·Ã¥Â¼ÂÃ¥ÂÂÃ¦ÂÂ°\n   * @param {any} config\n   */\n  @Input('config')\n  set config(value: any) {\n    // Ã¥ÂÂÃ¥Â¤ÂÃ§ÂÂ\n    this._config = Object.assign({}, this.defaultConfig, value);\n  }\n  private defaultConfig = {\n    // Ã¦Â Â·Ã¥Â¼ÂÃ¥ÂÂ\n    className: 'btn',\n    // Ã¥ÂÂ¨Ã¥ÂÂ¾Ã¦ÂÂÃ©ÂÂ®\n    fullscreen: {\n      on: './fullScreen-on.svg',\n      off: './fullScreen-off.svg',\n      icon: ''\n    },\n    // Ã¦ÂÂ§Ã¥ÂÂ¶Ã¦ÂÂ¾Ã§Â¤ÂºÃ¤Â½ÂÃ§Â½Â®Ã¯Â¼Âleft top bottom right  //Ã§Â»ÂÃ¥Â¯Â¹Ã¥Â®ÂÃ¤Â½Â\n    position: {\n      top: '10px',\n      right: '10px'\n    },\n    // Ã¦Â¯ÂÃ¤Â¸ÂªÃ¥ÂÂ¾Ã¦Â ÂÃ¥Â¤Â§Ã¥Â°Â\n    size: {\n      width: '50px', // Ã¥Â®Â½Ã¥ÂºÂ¦100px\n      height: '50px' // Ã©Â«ÂÃ¥ÂºÂ¦ 100px\n    }\n  };\n  constructor() {\n    this.config = this.defaultConfig;\n    // this.config.fullscreen.src = this.sanitizer.bypassSecurityTrustStyle(`url(\\'${this.config.fullscreen.src}\\')`)\n  }\n\n  ngOnInit() {\n    this.subscription = fromEvent(document, 'fullscreenchange').subscribe(\n      event => {\n        console.log(event);\n        const isNotFullscreen =\n          !document['fullscreenElement'] && // alternative standard method\n          !document['mozFullScreenElement'] &&\n          !document['webkitFullscreenElement'] &&\n          !document['msFullscreenElement'];\n        console.log(isNotFullscreen);\n\n        if (isNotFullscreen) {\n          this.config.fullscreen.icon = `url(\\'${this.config.fullscreen.on}\\')`;\n        } else {\n          this.config.fullscreen.icon = `url(\\'${\n            this.config.fullscreen.off\n          }\\')`;\n        }\n        console.log(this.config.fullscreen.icon);\n      }\n    );\n    this.config.fullscreen.icon = `url(\\'${this.config.fullscreen.on}\\')`;\n  }\n  ngOnDestroy(): void {\n    // tslint:disable-next-line:no-unused-expression\n    this.subscription && this.subscription.unsubscribe();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.config.icon = `url(\\'${this.config.fullscreen.src}\\')`;\n  }\n\n  /**\n   * Ã¦ÂÂ¯Ã¥Â½ÂÃ¥ÂÂÃ¥ÂÂÃ§Â´Â  Ã¥ÂÂ¨Ã¥Â±Â Ã¨Â¿ÂÃ¦ÂÂ¯document eleÃ¥ÂÂ¨Ã¥Â±ÂÃ¯Â¼Â\n   */\n  public fullscreenToggle(elem: any = document.documentElement): void {\n    if (\n      !document['fullscreenElement'] && // alternative standard method\n      !document['mozFullScreenElement'] &&\n      !document['webkitFullscreenElement'] &&\n      !document['msFullscreenElement']\n    ) {\n      // current working methods\n\n      if (elem.requestFullscreen) {\n        elem.requestFullscreen();\n      } else if (elem.msRequestFullscreen) {\n        elem.msRequestFullscreen();\n      } else if (elem.mozRequestFullScreen) {\n        elem.mozRequestFullScreen();\n      } else if (elem.webkitRequestFullscreen) {\n        elem.webkitRequestFullscreen(Element['ALLOW_KEYBOARD_INPUT']);\n      }\n    } else {\n      if (document.exitFullscreen) {\n        document.exitFullscreen();\n      } else if (document['msExitFullscreen']) {\n        document['msExitFullscreen']();\n      } else if (document['mozCancelFullScreen']) {\n        document['mozCancelFullScreen']();\n      } else if (document['webkitExitFullscreen']) {\n        document['webkitExitFullscreen']();\n      }\n    }\n  }\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { MapComponent } from '../../map/map.component';\nimport { Map } from 'handsmap-map-client/openlayers/Map';\nimport { ProjThree } from 'handsmap-map-client/openlayers/ProjThree';\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'tgip-ol-full-extent',\n  templateUrl: './full-extent.component.html',\n  styleUrls: ['./full-extent.component.css']\n})\nexport class FullExtentComponent implements OnInit {\n  /**\n   * Ã¥ÂÂ°Ã¥ÂÂ¾Ã¥ÂÂÃ¦ÂÂ°\n   * @param {any} map\n   */\n  @Input('map')\n  set map(value: MapComponent) {\n    if (!value) {\n      return;\n    }\n    console.log('Ã¥Â·Â²Ã§Â»ÂÃ¥Â®Â map Ã§Â»ÂÃ¤Â»Â¶ Ã¥Â®ÂÃ¤Â¾Â');\n    this._map = value;\n  }\n  private _map: MapComponent;\n  /**\n   * Ã¦Â Â·Ã¥Â¼ÂÃ¥ÂÂÃ¦ÂÂ°\n   * @param {any} config\n   */\n  @Input('config')\n  set config(value: any) {\n    if (!value) {\n      return;\n    }\n    this._config = Object.assign({}, this.defaultConfig, value);\n  }\n  _config: any;\n\n  @Input() configUrl: string;\n  /**\n   * Ã¥ÂÂ¾Ã¥Â±ÂÃ¦Â Â·Ã¥Â¼ÂÃ¥ÂÂÃ¦ÂÂ°\n   * @param {any} config\n   * @example\n   *\n   *{\n    // Ã¦Â Â·Ã¥Â¼ÂÃ¥ÂÂ\n    className: 'btn',\n    // Ã¥ÂÂ¨Ã¥ÂÂ¾Ã¦ÂÂÃ©ÂÂ®\n    icon: './full-extent-on.svg',\n    // Ã¦ÂÂ§Ã¥ÂÂ¶Ã¦ÂÂ¾Ã§Â¤ÂºÃ¤Â½ÂÃ§Â½Â®Ã¯Â¼Âleft top bottom right  //Ã§Â»ÂÃ¥Â¯Â¹Ã¥Â®ÂÃ¤Â½Â\n    position: {\n      bottom: '10px',\n      right: '10px'\n    },\n    // Ã¦Â¯ÂÃ¤Â¸ÂªÃ¥ÂÂ¾Ã¦Â ÂÃ¥Â¤Â§Ã¥Â°Â\n    size: {\n      width: '50px', // Ã¥Â®Â½Ã¥ÂºÂ¦100px\n      height: '50px' // Ã©Â«ÂÃ¥ÂºÂ¦ 100px\n    }\n  };\n   *\n   */\n  private defaultConfig = {\n    // Ã¦Â Â·Ã¥Â¼ÂÃ¥ÂÂ\n    className: 'btn',\n    // Ã¥ÂÂ¨Ã¥ÂÂ¾Ã¦ÂÂÃ©ÂÂ®\n    icon: './full-extent-on.svg',\n    // Ã¦ÂÂ§Ã¥ÂÂ¶Ã¦ÂÂ¾Ã§Â¤ÂºÃ¤Â½ÂÃ§Â½Â®Ã¯Â¼Âleft top bottom right  //Ã§Â»ÂÃ¥Â¯Â¹Ã¥Â®ÂÃ¤Â½Â\n    position: {\n      bottom: '10px',\n      right: '10px'\n    },\n    // Ã¦Â¯ÂÃ¤Â¸ÂªÃ¥ÂÂ¾Ã¦Â ÂÃ¥Â¤Â§Ã¥Â°Â\n    size: {\n      width: '50px', // Ã¥Â®Â½Ã¥ÂºÂ¦100px\n      height: '50px' // Ã©Â«ÂÃ¥ÂºÂ¦ 100px\n    }\n  };\n\n  constructor() {\n    this._config = this.defaultConfig || {};\n  }\n\n  ngOnInit() {}\n\n  public fullExtentToggle() {\n    if (this._map) {\n      let center = [this._map.config.centerX, this._map.config.centerY];\n      if (this._map.config.coordinateSystimSrid === 'EPSG:3857') {\n        center = ProjThree.ll2webmerc(center);\n      }\n\n      this._map.map.animationPanZoom({\n        coordinate: center, // ctrl.mapCenter,\n        zoom: this._map.config.zoom || 0,\n        duration: 400\n      });\n    } else {\n      console.warn('Ã¦Â²Â¡Ã¦ÂÂÃ¤Â¼Â Ã¥ÂÂ¥ map Ã¥Â®ÂÃ¤Â¾ÂÃ¯Â¼Â');\n    }\n  }\n}\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'tgip-ol-switcher-map',\n  templateUrl: './switcher-map.component.html',\n  styleUrls: ['./switcher-map.component.css']\n})\nexport class SwitcherMapComponent implements OnInit {\n  /**\n   * Ã¨Â¾ÂÃ¥ÂÂºÃ¥ÂÂÃ¦ÂÂ°\n   * @param {any} outer\n   */\n  @Output() private outer = new EventEmitter<any>();\n  flag: boolean;\n  constructor() {\n    this.config = this.defaultConfig;\n  }\n\n  private _config: any;\n  get config(): any {\n    return this._config;\n  }\n  /**\n   * Ã¥ÂÂ¾Ã¥Â±ÂÃ¦Â Â·Ã¥Â¼ÂÃ¥ÂÂÃ¦ÂÂ°\n   * @param {any} config\n   * @example\n   * {\n    backgroundSize: {\n      backgroundSize:  100% 100%,\n    },\n    selectFontBgColor: {\n      bg:  #3385FF ,\n      border:  1px solid #3385FF,\n    },\n    unselectFontBgColor: {\n      bg:  none ,\n      border:  1px solid,\n    },\n    size: {\n      width:  auto , // Ã¦ÂÂ»Ã¥Â®Â½Ã¥ÂºÂ¦\n      height:  100px , // Ã¦ÂÂ»Ã©Â«ÂÃ¥ÂºÂ¦\n      background:  #fff,\n    },\n    imgSize: {\n      width:  80px , // Ã¦ÂÂ»Ã¥Â®Â½Ã¥ÂºÂ¦\n      height:  80px  // Ã¦ÂÂ»Ã©Â«ÂÃ¥ÂºÂ¦\n    },\n    position: {\n      top:  0px ,\n      bottom:  100px ,\n      right:  0px,\n    },\n    fontStyle: {\n      bottom:  0 ,\n      right:  0 ,\n      color:  #fff ,\n      fontSize:  12px,\n    },\n    baseMap: [\n      {\n        src:  url(assets/map.png) ,\n        title:  Ã¥ÂÂ°Ã¥ÂÂ¾ ,\n        visible: false,\n        isdisplay: true,\n        layer: {}\n      },\n      {\n        src:  url(assets/map.png) ,\n        title:  Ã¥ÂÂ°Ã§ÂÂ ,\n        visible: false,\n        isdisplay: true,\n        layer: {}\n      },\n      {\n        src:  url(assets/map.png) ,\n        title:  Ã¥ÂÂ¨Ã¦ÂÂ¯ ,\n        visible: false,\n        isdisplay: true,\n        layer: {}\n      },\n      {\n        src:  url(assets/map.png) ,\n        title:  Ã¥ÂÂ«Ã¦ÂÂ ,\n        visible: false,\n        isdisplay: true,\n        layer: {}\n      }\n    ]\n  };\n   */\n  @Input('config')\n  set config(value: any) {\n    // Ã¥ÂÂÃ¥Â¤ÂÃ§ÂÂ\n    this._config = Object.assign({}, this.defaultConfig, value);\n    // this._config = DefaultOptionsUtil.preProcOptions(this.defaultConfig, value);\n    // this._config = value;\n  }\n\n  private defaultConfig = {\n    backgroundSize: {\n      backgroundSize: '100% 100%'\n    },\n    selectFontBgColor: {\n      bg: '#3385FF',\n      border: '1px solid #3385FF'\n    },\n    unselectFontBgColor: {\n      bg: 'none',\n      border: '1px solid'\n    },\n    size: {\n      width: 'auto', // Ã¦ÂÂ»Ã¥Â®Â½Ã¥ÂºÂ¦\n      height: '100px', // Ã¦ÂÂ»Ã©Â«ÂÃ¥ÂºÂ¦\n      background: '#fff'\n    },\n    imgSize: {\n      width: '80px', // Ã¦ÂÂ»Ã¥Â®Â½Ã¥ÂºÂ¦\n      height: '80px' // Ã¦ÂÂ»Ã©Â«ÂÃ¥ÂºÂ¦\n    },\n    position: {\n      top: '0px',\n      bottom: '100px',\n      right: '0px'\n    },\n    fontStyle: {\n      bottom: '0',\n      right: '0',\n      color: '#fff',\n      fontSize: '12px'\n    },\n    baseMap: [\n      {\n        src: 'url(assets/map.png)',\n        title: 'Ã¥ÂÂ°Ã¥ÂÂ¾',\n        visible: false,\n        isdisplay: true,\n        layer: {}\n      },\n      {\n        src: 'url(assets/map.png)',\n        title: 'Ã¥ÂÂ°Ã§ÂÂ',\n        visible: false,\n        isdisplay: true,\n        layer: {}\n      },\n      {\n        src: 'url(assets/map.png)',\n        title: 'Ã¥ÂÂ¨Ã¦ÂÂ¯',\n        visible: false,\n        isdisplay: true,\n        layer: {}\n      },\n      {\n        src: 'url(assets/map.png)',\n        title: 'Ã¥ÂÂ«Ã¦ÂÂ',\n        visible: false,\n        isdisplay: true,\n        layer: {}\n      }\n    ]\n  };\n  // Ã§ÂÂ¹Ã¥ÂÂ»Ã©ÂÂÃ¤Â¸Â­\n  fullscreenToggle(item: { title: any; visible: boolean }): void {\n    this.outer.emit(item);\n    this.flag = true;\n    this.config.baseMap.forEach((value: { title: any; visible: boolean }) => {\n      if (value.title === item.title) {\n        value.visible = true;\n      } else {\n        value.visible = false;\n      }\n    });\n  }\n  // Ã©Â¼Â Ã¦Â ÂÃ§Â§Â»Ã¥ÂÂ¥\n  mouseenter(): void {\n    this.config.baseMap.forEach(\n      (value: { visible: any; isdisplay: boolean }) => {\n        value.isdisplay = true;\n      }\n    );\n  }\n  // Ã©Â¼Â Ã¦Â ÂÃ§Â§Â»Ã¥ÂÂº\n  mouseleave(): void {\n    if (this.flag) {\n      this.config.baseMap.forEach(\n        (value: { visible: any; isdisplay: boolean }) => {\n          if (value.visible === true) {\n            value.isdisplay = true;\n          } else {\n            value.isdisplay = false;\n          }\n        }\n      );\n    }\n  }\n  ngOnInit() {}\n}\n","import {\n  Component,\n  OnInit,\n  Input,\n  ChangeDetectorRef,\n  ViewChild,\n  Output,\n  EventEmitter\n} from '@angular/core';\nimport { MapComponent } from '../../map/map.component';\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'tgip-ol-zoom',\n  templateUrl: './zoom-map.component.html',\n  styleUrls: ['./zoom-map.component.css']\n})\nexport class ZoomMapComponent implements OnInit {\n  /**\n   * Ã¨Â¾ÂÃ¥ÂÂºÃ¥ÂÂÃ¦ÂÂ°\n   * @param {any} outer\n   */\n  @Output() private outer = new EventEmitter<string>();\n  /**\n   * Ã¥ÂÂ°Ã¥ÂÂ¾Ã¥ÂÂÃ¦ÂÂ°\n   * @param {any} map\n   */\n  @Input('map')\n  set map(value: any) {\n    if (!value) {\n      return;\n    }\n    console.log('Ã¥Â·Â²Ã§Â»ÂÃ¥Â®Â map Ã¥Â®ÂÃ¤Â¾Â');\n    this._map = value;\n    this.initMap();\n  }\n  private _map: any;\n  private _config: any;\n  constructor(public changeDetectorRef: ChangeDetectorRef) {\n    this.config = this.defaultConfig;\n  }\n  @ViewChild('myMap') mapconfig;\n  // Ã¨Â®Â¾Ã§Â½Â®Ã©Â»ÂÃ¨Â®Â¤Ã¥ÂÂ¼\n  get config(): any {\n    return this._config;\n  }\n  /**\n   * Ã¥ÂÂ¾Ã¥Â±ÂÃ¦Â Â·Ã¥Â¼ÂÃ¥ÂÂÃ¦ÂÂ°\n   * @param {any} config\n   * @example\n   * {\n    position: {\n        top: 0px,\n        bottom: 100px,\n        right: 0px,\n        left: 0pxÃ¯Â¼Â\n    },\n    size: {\n        width:  50px ,\n        height:  50pxÃ¯Â¼Â\n    },\n    border: {\n        zoomIn:  1px solid #1296db ,\n        zoomOut:  1px solid #1296db ,\n        disable:  1px solid #cdcdcd ,\n        radius:  5px ,\n        cursor:  pointer ,\n        uncursor:  no-dropÃ¯Â¼Â\n    },\n    zoomIn: {\n        enable:  url(assets/enlarge.png) no-repeat center / 70% 70% ,\n        disable:  url(assets/enlarge_d.png) no-repeat center / 70% 70% ,\n        visible: true\n    },\n    zoomOut: {\n        enable:  url(assets/less.png) no-repeat center / 70% 70% ,\n        disable:  url(assets/less_d.png) no-repeat center / 70% 70% ,\n        visible: true\n    }\n};\n   */\n  @Input('config')\n  set config(value: any) {\n    // Ã¥ÂÂÃ¥Â¤ÂÃ§ÂÂ\n    this._config = Object.assign({}, this.defaultConfig, value);\n  }\n\n  private defaultConfig = {\n    position: {\n      top: '0px',\n      bottom: '100px',\n      right: '0px',\n      left: '0px'\n    },\n    size: {\n      width: '50px', // Ã¦ÂÂ»Ã¥Â®Â½Ã¥ÂºÂ¦\n      height: '50px' // Ã¦ÂÂ»Ã©Â«ÂÃ¥ÂºÂ¦\n    },\n    border: {\n      zoomIn: '1px solid #1296db',\n      zoomOut: '1px solid #1296db',\n      disable: '1px solid #cdcdcd',\n      radius: '5px',\n      cursor: 'pointer',\n      uncursor: 'no-drop '\n    },\n    // Ã¦ÂÂ¾Ã¥Â¤Â§Ã¦ÂÂÃ©ÂÂ®\n    zoomIn: {\n      enable: 'url(assets/enlarge.png)', // Ã¦Â­Â£Ã¥Â¸Â¸Ã¥ÂÂ¾Ã¦Â Â\n      disable: 'url(assets/enlarge_d.png)', // Ã§Â¦ÂÃ§ÂÂ¨Ã¥ÂÂ¾Ã¦Â Â\n      visible: true\n    },\n    bgStyle: {\n      backgroundrepeat: 'no-repeat',\n      backgroundposition: 'center',\n      backgroundsize: '100% 100%'\n    },\n    // Ã§Â¼Â©Ã¥Â°ÂÃ¦ÂÂÃ©ÂÂ®\n    zoomOut: {\n      enable: 'url(assets/less.png)',\n      disable: 'url(assets/less_d.png)',\n      visible: true\n    }\n  };\n  changeZoom(data): void {\n    if (!this._map) {\n      return;\n    }\n    this._map.zoomByDelta(data);\n  }\n  // Ã§ÂÂÃ¥ÂÂ¬Ã§ÂÂÃ©ÂÂ¢Ã§Â¼Â©Ã¦ÂÂ¾Ã¦Â¯ÂÃ¤Â¾Â\n  initMap(): void {\n    const self = this;\n    const view = this._map.getView();\n    view.on('change:resolution', function(e) {\n      const maxZoom = view.getMaxZoom();\n      const minZoom = view.getMinZoom();\n      if (view.getZoom() >= maxZoom) {\n        self.config.zoomIn.visible = false;\n      }\n      if (view.getZoom() < maxZoom && view.getZoom() > minZoom) {\n        self.config.zoomIn.visible = true;\n        self.config.zoomOut.visible = true;\n      }\n      if (view.getZoom() <= minZoom) {\n        self.config.zoomOut.visible = false;\n      }\n    });\n  }\n  ngOnInit() {}\n}\n","import {\n  Component,\n  OnInit,\n  Input,\n  OnChanges,\n  SimpleChanges\n} from '@angular/core';\nimport { Map } from 'handsmap-map-client/openlayers/Map';\nimport { View } from 'handsmap-map-client/openlayers/View';\nimport { TileXYZLayer } from 'handsmap-map-client/openlayers/layer';\ndeclare let HandsMap;\nexport interface MapConfigInterface {\n  maxScale?: number;\n  minScale?: number;\n  extent?: Array<number>;\n  defaultLevel?: number;\n  baseMapUrl?: string;\n  proj?: string;\n}\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'tgip-ol-map',\n  templateUrl: './map.component.html',\n  styleUrls: ['./map.component.css']\n})\nexport class MapComponent implements OnInit, OnChanges {\n  /**\n   * Ã¥ÂÂ¾Ã¥Â±ÂÃ¦Â Â·Ã¥Â¼ÂÃ¥ÂÂÃ¦ÂÂ°\n   * @param {any} config\n   * @example\n   *static mapConfig = {\n     centerX : 118.803930100525,\n     centerY : 31.8484312112617,\n     cnName :  Ã¦Â±ÂÃ¥Â®ÂÃ¥ÂºÂÃ¥ÂÂ¾ ,\n     enName :  jiangning ,\n     extentMaxX : 119.366783573428,\n     extentMaxY : 32.3233337556079,\n     extentMinX : 118.324579652874,\n     extentMinY : 31.478149206337,\n     id :  test8888888888888 ,\n     maxZoom : 7,\n     minZoom : 3,\n     zoom : 4,\n     coordinateSystimSrid :  EPSG:4326 ,\n     backgroundColor :  #568899 ,\n     basemapMapLayers : [{\n       id :  mollit ,\n       visible : true,\n       sourceId :  jiangning_bg ,\n       sourcePara : {\n         cnName :  Ã¦Â±ÂÃ¥Â®ÂÃ¥ÂÂ¨Ã¥ÂÂÃ¦ÂÂÃ¦Â¸Â¸ ,\n         describe :  test ,\n         gmtCreate : 1554256721000,\n         gmtModified : 1554256721000,\n         enName :  jiangning_88 ,\n         id :  4da0d2318ac7aa739233ffe421587b70 ,\n         originX : -400,\n         originY : 400,\n         overAmap : 0,\n         coordinateSystimSrid :  EPSG:4326 ,\n         resolutions : [0.0009517844023321121, 0.0007138383017490841, 0.00047589220116605604,\n          0.00035691915087454206, 0.00017845957543727103, 0.00011897305029151401, 0.000059486525145757005,\n          0.000029743262572878502\n        ],\n         scales : [1600000, 1200000, 800000, 600000, 300000, 200000, 100000, 50000],\n         tilesizeHeight : 512,\n         tilesizeWidth : 512,\n         dpi : 192,\n         urlAmap :   ,\n         urlLeaflet :   ,\n      }\n    }]\n  };\n}\n\n   */\n  @Input('config')\n  set setConfig(value: any) {\n    // Ã¥ÂÂÃ¥Â¤ÂÃ§ÂÂ\n    if (!value) {\n      return;\n    }\n    this.config = Object.assign({}, this.defaultConfig, value);\n    console.log('Ã§Â¬Â¬3Ã¦Â­Â¥Ã¯Â¼Â', this.config, value);\n    this.initMap(this.config);\n    this.updateVisible();\n  }\n\n  _visible: boolean;\n  config: any;\n  private hasInit = false;\n\n  @Input() configUrl: string;\n\n  private defaultConfig = null;\n\n  public map: any;\n  public xyzLayer: any;\n  constructor() {\n    this.config = this.defaultConfig;\n    console.log('Ã§Â¬Â¬Ã¤Â¸ÂÃ¦Â­Â¥', this.config);\n  }\n  ngOnInit() {\n    console.log('Ã§Â¬Â¬Ã¤ÂºÂÃ¦Â­Â¥Ã¯Â¼Â', this.config);\n\n    if (this.config) {\n      this.initMap(this.config);\n    } else if (this.configUrl) {\n      this.initMap(this.configUrl);\n    } else {\n      console.warn('Ã¥ÂÂ°Ã¥ÂÂ¾Ã©ÂÂÃ§Â½Â®Ã¤Â¸ÂºÃ§Â©ÂºÃ¯Â¼ÂÃ¨Â¯Â·Ã¦Â£ÂÃ¦ÂÂ¥Ã©ÂÂÃ§Â½Â®Ã¯Â¼Â');\n    }\n  }\n\n  initMap(config: any) {\n    console.log('Ã¥ÂÂ°Ã¥ÂÂ¾Ã¥ÂÂÃ¥Â§ÂÃ¥ÂÂÃ¥Â¼ÂÃ¥Â§Â');\n    if (this.hasInit) {\n      console.log('Ã¥ÂÂ°Ã¥ÂÂ¾Ã¥Â·Â²Ã§Â»ÂÃ¥ÂÂÃ¥Â§ÂÃ¥ÂÂÃ¯Â¼ÂÃ©ÂÂÃ§Â½Â®Ã¥ÂÂÃ¥ÂÂÃ¤Â¸ÂÃ¤Â¼ÂÃ¨ÂÂªÃ¥ÂÂ¨Ã¥ÂÂÃ¦Â­Â¥');\n      return;\n    }\n\n    this.hasInit = true;\n    const mapParams = config;\n    this.map = new Map({\n      target: 'mapContainer',\n      // controls: { zoom: false, roate: false, attribution: false },\n      view: View.getViewByHmapserver(mapParams),\n      // interactions: { pinchRotate: false }\n    });\n    this.xyzLayer = TileXYZLayer.getTileXYZLayerByHmapserver(\n      mapParams\n    );\n    this.map.addLayer(this.xyzLayer);\n    this.map.showClickCoordinate = true;\n  }\n  updateVisible() {\n    this.map.removeLayer(this.xyzLayer);\n    this.xyzLayer = TileXYZLayer.getTileXYZLayerByHmapserver(this.config);\n    this.map.addLayer(this.xyzLayer);\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    console.log(changes);\n  }\n\n}\n","import {\n  Component,\n  OnInit,\n  AfterViewInit,\n  Output,\n  Input,\n  EventEmitter\n} from '@angular/core';\nimport { SwiperConfigInterface } from 'ngx-swiper-wrapper';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'tgip-ol-layer-control-pc1',\n  templateUrl: './layer-control-pc1.component.html',\n  styleUrls: ['./layer-control-pc1.component.css']\n})\nexport class LayerControlPc1Component implements OnInit {\n  @Output() private outer = new EventEmitter<any>(); // Ã¥Â¹Â¿Ã¦ÂÂ­Ã¤ÂºÂÃ¤Â»Â¶\n  public mySwiper: SwiperConfigInterface = {};\n  // @Input() config: any;\n  mutex = false; // Ã¤ÂºÂÃ¦ÂÂ¥\n  constructor() {\n    this.config = this.defaultConfig;\n  }\n  private _config: any;\n  get config(): any {\n    return this._config;\n  }\n  /**\n   * Ã¦Â Â·Ã¥Â¼ÂÃ¥ÂÂÃ¦ÂÂ°\n   * @param {any} config\n   * @example\n   * {\n    size: {\n      width:  auto , // Ã¦ÂÂ»Ã¥Â®Â½Ã¥ÂºÂ¦\n      height:  auto  // Ã¦ÂÂ»Ã©Â«ÂÃ¥ÂºÂ¦\n    },\n    singleSize: {\n      width:  50px ,\n      height:  50px  // Ã¥ÂÂ¾Ã¦Â ÂÃ¥Â¤Â§Ã¥Â°Â\n    },\n    position: {\n      top:  10px ,\n      left:  10px  // Ã¥ÂÂ¨Ã¥Â±ÂÃ¥Â®ÂÃ¤Â½Â\n    },\n    style: {\n      bgClass:  custom , // Ã¦ÂÂ´Ã¤Â¸ÂªÃ¨ÂÂÃ¦ÂÂ¯Ã¦Â Â·Ã¥Â¼Â\n      singleSelectClass:  select , // Ã©ÂÂÃ¤Â¸Â­Ã¥ÂÂÃ¦Â Â·Ã¥Â¼Â\n      singleUnselectClass:  unSelect , // Ã¦ÂÂªÃ©ÂÂÃ¤Â¸Â­Ã¦Â Â·Ã¥Â¼Â\n      checkbox:  assets/all.png ,\n      basis: {\n        float:  left ,\n        liststyle:  none ,\n        width:  135px ,\n        height:  100px ,\n        textalign:  center ,\n        fontColor:  #ffffff ,\n        fontSize:  24px ,\n        padding:  10px ,\n        borderRadius:  10PX,\n        //  lineheight :  100px ,  // Ã¥ÂÂºÃ§Â¡ÂÃ¦Â Â·Ã¥Â¼Â\n      },\n      bg: {\n        background:  #103c26 ,\n        border:  1px solid #b1d4c2 ,\n        boxShadow:  0 0 10px 0 rgba(16,60,38,.3),\n      },\n      select: {\n        src:  assets/icon.png ,\n        bgColor:  rgba(99,132,115,.3) ,\n        fontColor:  #666666 ,\n        fontSize:  24px ,\n        borderRadio:  10px  // Ã©ÂÂÃ¤Â¸Â­Ã¦Â Â·Ã¥Â¼Â\n      },\n      unselect: {\n        src:  assets/icon.png ,\n        bgColor:  none ,\n        fontColor:  #ffffff ,\n        fontSize:  24px ,\n        borderRadio:  10px  // Ã¦ÂÂªÃ©ÂÂÃ¤Â¸Â­Ã¦Â Â·Ã¥Â¼Â\n      }\n    },\n    layers: [\n      {\n        title:  Ã¦ÂÂÃ¦Â¸Â¸Ã¥ÂÂ¬Ã¨Â·Â¯ ,\n        layerName:  tourismRoad ,\n        visible: false, // Ã©Â»ÂÃ¨Â®Â¤Ã¦ÂÂ¾Ã§Â¤ÂºÃ¤Â¸ÂÃ¥ÂÂ¦\n        //  layer : object, // Ã¥ÂÂ¾Ã¥Â±ÂÃ¥Â¯Â¹Ã¨Â±Â¡Ã¯Â¼ÂÃ¥ÂÂ¯Ã¤Â»Â¥Ã©ÂÂÃ¨Â¿ÂÃ¥Â¯Â¹Ã¨Â±Â¡Ã¦ÂÂ¥Ã¦ÂÂ§Ã¥ÂÂ¶ Ã¦ÂÂ¾Ã§Â¤ÂºÃ¤Â¸ÂÃ¥ÂÂ¦\n        select: {\n          src:  assets/icon.png,\n        },\n        unselect: {\n          src:  assets/icon.png,\n        }\n      },\n      {\n        title:  Ã¦ÂÂ¯Ã¥ÂÂº ,\n        layerName:  tourismRoad ,\n        visible: false, // Ã©Â»ÂÃ¨Â®Â¤Ã¦ÂÂ¾Ã§Â¤ÂºÃ¤Â¸ÂÃ¥ÂÂ¦\n        //  layer : object, // Ã¥ÂÂ¾Ã¥Â±ÂÃ¥Â¯Â¹Ã¨Â±Â¡Ã¯Â¼ÂÃ¥ÂÂ¯Ã¤Â»Â¥Ã©ÂÂÃ¨Â¿ÂÃ¥Â¯Â¹Ã¨Â±Â¡Ã¦ÂÂ¥Ã¦ÂÂ§Ã¥ÂÂ¶ Ã¦ÂÂ¾Ã§Â¤ÂºÃ¤Â¸ÂÃ¥ÂÂ¦\n        select: {\n          src:  assets/icon.png,\n        },\n        unselect: {\n          src:  assets/icon.png,\n        }\n      },\n      {\n        title:  Ã¤Â¹Â¡Ã¦ÂÂÃ¦ÂÂÃ¦Â¸Â¸Ã§ÂÂ¹ ,\n        layerName:  tourismRoad ,\n        visible: false, // Ã©Â»ÂÃ¨Â®Â¤Ã¦ÂÂ¾Ã§Â¤ÂºÃ¤Â¸ÂÃ¥ÂÂ¦\n        //  layer : object, // Ã¥ÂÂ¾Ã¥Â±ÂÃ¥Â¯Â¹Ã¨Â±Â¡Ã¯Â¼ÂÃ¥ÂÂ¯Ã¤Â»Â¥Ã©ÂÂÃ¨Â¿ÂÃ¥Â¯Â¹Ã¨Â±Â¡Ã¦ÂÂ¥Ã¦ÂÂ§Ã¥ÂÂ¶ Ã¦ÂÂ¾Ã§Â¤ÂºÃ¤Â¸ÂÃ¥ÂÂ¦\n        select: {\n          src:  assets/icon.png,\n        },\n        unselect: {\n          src:  assets/icon.png,\n        }\n      },\n      {\n        title:  Ã©Â©Â¿Ã§Â«Â ,\n        layerName:  tourismRoad ,\n        visible: false, // Ã©Â»ÂÃ¨Â®Â¤Ã¦ÂÂ¾Ã§Â¤ÂºÃ¤Â¸ÂÃ¥ÂÂ¦\n        //  layer : object, // Ã¥ÂÂ¾Ã¥Â±ÂÃ¥Â¯Â¹Ã¨Â±Â¡Ã¯Â¼ÂÃ¥ÂÂ¯Ã¤Â»Â¥Ã©ÂÂÃ¨Â¿ÂÃ¥Â¯Â¹Ã¨Â±Â¡Ã¦ÂÂ¥Ã¦ÂÂ§Ã¥ÂÂ¶ Ã¦ÂÂ¾Ã§Â¤ÂºÃ¤Â¸ÂÃ¥ÂÂ¦\n        select: {\n          src:  assets/icon.png,\n        },\n        unselect: {\n          src:  assets/icon.png,\n        }\n      },\n    ]\n  };\n   */\n  @Input('config')\n  set config(value: any) {\n    // Ã¥ÂÂÃ¥Â¤ÂÃ§ÂÂ\n    this._config = Object.assign({}, this.defaultConfig, value);\n    // this._config = DefaultOptionsUtil.preProcOptions(this.defaultConfig, value);\n    // this._config = value;\n  }\n\n  // Ã©Â»ÂÃ¨Â®Â¤Ã¥ÂÂ¾Ã¥Â±ÂÃ¥ÂÂÃ¦ÂÂ°\n  private defaultConfig = {};\n\n  // Ã§ÂÂ¹Ã¥ÂÂ»Ã¤ÂºÂÃ¤Â»Â¶\n  fullscreenToggle(item: { title: any; visible: boolean }): void {\n    this.outer.emit(item);\n    if (this.mutex === true) {\n      this.config.layers.forEach((value: { title: any; visible: boolean }) => {\n        if (value.title === item.title) {\n          value.visible = true;\n        } else {\n          value.visible = false;\n        }\n      });\n    } else {\n      item.visible = !item.visible;\n    }\n  }\n\n  ngOnInit() {\n    this.mySwiper = {\n      // vertical\n      // horizontal\n      direction: 'horizontal',\n      // Ã¥Â¼ÂÃ¥ÂÂ¯Ã©Â¼Â Ã¦Â ÂÃ§ÂÂÃ¦ÂÂÃ¦ÂÂÃ§ÂÂ¶Ã¦ÂÂ\n      grabCursor: true,\n      loop: false,\n      slidesPerView: 'auto',\n      // loopedSlides: 8,\n      autoplay: false,\n      speed: 1000\n      // Ã¥ÂÂÃ¦ÂÂ¢Ã¦ÂÂÃ¦ÂÂÃ¤Â¸Âº coverflow\n      // effect: 'coverflow',\n      // coverflow Ã©ÂÂÃ§Â½Â®\n    };\n  }\n}\n","import {\n  Component,\n  OnInit,\n  Input,\n  ChangeDetectorRef,\n  ViewChild,\n  Output,\n  EventEmitter\n} from '@angular/core';\nimport { SwiperConfigInterface } from 'ngx-swiper-wrapper';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'tgip-ol-layer-control-pc2',\n  templateUrl: './layer-control-pc2.component.html',\n  styleUrls: ['./layer-control-pc2.component.css']\n})\nexport class LayerControlPc2Component implements OnInit {\n  /**\n   * Ã¨Â¾ÂÃ¥ÂÂºÃ¥ÂÂÃ¦ÂÂ°\n   * @param {any} outer\n   */\n  @Output() private outer = new EventEmitter<any>(); // Ã¥Â¹Â¿Ã¦ÂÂ­Ã¤ÂºÂÃ¤Â»Â¶\n  public mySwiper: SwiperConfigInterface = {};\n  // @Input() config: any;\n  mutex = false; // Ã¤ÂºÂÃ¦ÂÂ¥\n  constructor() {\n    this.config = this.defaultConfig;\n  }\n  private _config: any;\n  get config(): any {\n    return this._config;\n  }\n   /**\n   * Ã¥ÂÂ¾Ã¥Â±ÂÃ¦Â Â·Ã¥Â¼ÂÃ¥ÂÂÃ¦ÂÂ°\n   * @param {any} config\n   * @example\n   *  {\n    size: {\n      width:  auto , // Ã¦ÂÂ»Ã¥Â®Â½Ã¥ÂºÂ¦\n      height:  auto  // Ã¦ÂÂ»Ã©Â«ÂÃ¥ÂºÂ¦\n    },\n    singleSize: {\n      width:  30px , // Ã¥ÂÂ¾Ã¦Â ÂÃ¥Â¤Â§Ã¥Â°Â\n      height:  30px ,\n      padding:  10px  // Ã¥ÂÂ¾Ã¦Â ÂÃ¥Â¤ÂÃ¨Â¾Â¹Ã¨Â·Â\n    },\n    position: {\n      top:  10px ,\n      left:  10px  // Ã¥ÂÂ¨Ã¥Â±ÂÃ¥Â®ÂÃ¤Â½Â\n    },\n    style: {\n      bgClass:  custom , // Ã¦ÂÂ´Ã¤Â¸ÂªÃ¨ÂÂÃ¦ÂÂ¯Ã¦Â Â·Ã¥Â¼Â\n      singleSelectClass:  select , // Ã©ÂÂÃ¤Â¸Â­Ã¥ÂÂÃ¦Â Â·Ã¥Â¼Â\n      singleUnselectClass:  unSelect , // Ã¦ÂÂªÃ©ÂÂÃ¤Â¸Â­Ã¦Â Â·Ã¥Â¼Â\n      checkbox:  assets/all.png ,\n      basis: {\n        float:  left ,\n        liststyle:  none ,\n        width:  120px , // Ã¥ÂÂÃ¥Â®Â½Ã¥ÂºÂ¦\n        height:  50px , // Ã¥ÂÂÃ©Â«ÂÃ¥ÂºÂ¦\n        textalign:  center ,\n        fontColor:  #ffffff ,\n        fontSize:  18px ,\n        padding:  0px , // Ã¥ÂÂÃ¥Â¤ÂÃ¨Â¾Â¹Ã¨Â·Â\n        borderRadius:  10PX,\n        //  lineheight :  100px ,  // Ã¥ÂÂºÃ§Â¡ÂÃ¦Â Â·Ã¥Â¼Â\n      },\n      bg: {\n        background:  #003887 ,\n        border:  1px solid #b1d4c2 ,\n        boxShadow:  0 0 10px 0 rgba(16,60,38,.3),\n      },\n      select: {\n        src:  assets/icon.png ,\n        bgColor:  #15305c ,\n        fontColor:  #666666 ,\n        borderRadio:  10px  // Ã©ÂÂÃ¤Â¸Â­Ã¦Â Â·Ã¥Â¼Â\n      },\n      unselect: {\n        src:  assets/icon.png ,\n        bgColor:  none ,\n        fontColor:  #ffffff ,\n        borderRadio:  10px  // Ã¦ÂÂªÃ©ÂÂÃ¤Â¸Â­Ã¦Â Â·Ã¥Â¼Â\n      }\n    },\n    layers: []\n  };\n   */\n  @Input('config')\n  set config(value: any) {\n    // Ã¥ÂÂÃ¥Â¤ÂÃ§ÂÂ\n    this._config = Object.assign({}, this.defaultConfig, value);\n  }\n  // Ã¥ÂÂ¾Ã¥Â±ÂÃ¥ÂÂÃ¦ÂÂ°\n  private defaultConfig = {};\n  // Ã§ÂÂ¹Ã¥ÂÂ»Ã¤ÂºÂÃ¤Â»Â¶\n  fullscreenToggle(item: { title: any; visible: boolean }): void {\n    this.outer.emit(item);\n    if (this.mutex === true) {\n      this.config.layers.forEach((value: { title: any; visible: boolean }) => {\n        if (value.title === item.title) {\n          value.visible = true;\n        } else {\n          value.visible = false;\n        }\n      });\n    } else {\n      item.visible = !item.visible;\n    }\n  }\n\n  ngOnInit() {\n    this.mySwiper = {\n      // vertical\n      // horizontal\n      direction: 'horizontal',\n      // Ã¥Â¼ÂÃ¥ÂÂ¯Ã©Â¼Â Ã¦Â ÂÃ§ÂÂÃ¦ÂÂÃ¦ÂÂÃ§ÂÂ¶Ã¦ÂÂ\n      grabCursor: true,\n      loop: false,\n      slidesPerView: 'auto',\n      // loopedSlides: 8,\n      autoplay: false,\n      speed: 1000\n      // Ã¥ÂÂÃ¦ÂÂ¢Ã¦ÂÂÃ¦ÂÂÃ¤Â¸Âº coverflow\n      // effect: 'coverflow',\n      // coverflow Ã©ÂÂÃ§Â½Â®\n    };\n  }\n}\n","import {\n  Component,\n  OnInit,\n  AfterViewInit,\n  Input,\n  Output,\n  EventEmitter\n} from '@angular/core';\nimport { SwiperConfigInterface } from 'ngx-swiper-wrapper';\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'tgip-ol-layer-control-pc3',\n  templateUrl: './layer-control-pc3.component.html',\n  styleUrls: ['./layer-control-pc3.component.css']\n})\nexport class LayerControlPc3Component implements OnInit {\n  /**\n   * Ã¨Â¾ÂÃ¥ÂÂºÃ¥ÂÂÃ¦ÂÂ°\n   * @param {any} outer\n   */\n  @Output() private outer = new EventEmitter<any>(); // Ã¥Â¹Â¿Ã¦ÂÂ­Ã¤ÂºÂÃ¤Â»Â¶\n  public mySwiper: SwiperConfigInterface = {};\n  mutex = false; // Ã¤ÂºÂÃ¦ÂÂ¥\n  flag = false;\n  self: any;\n  sum = 0;\n  hide = false;\n  constructor() {\n    this.config = this.defaultConfig;\n  }\n  private _config: any;\n  get config(): any {\n    return this._config;\n  }\n  /**\n   * Ã¥ÂÂ¾Ã¥Â±ÂÃ¦Â Â·Ã¥Â¼ÂÃ¥ÂÂÃ¦ÂÂ°\n   * @param {any} config\n   * @example\n   * {\n    size: {\n      width:  50px , // Ã¥ÂÂÃ¥Â§ÂÃ¥Â®Â½Ã¥ÂºÂ¦\n      height:  50px  // Ã¥ÂÂÃ¥Â§ÂÃ©Â«ÂÃ¥ÂºÂ¦\n    },\n    position: {\n      top:  10px ,\n      left:  10px , // Ã¥ÂÂ¨Ã¥Â±ÂÃ¥Â®ÂÃ¤Â½Â\n      right:  0px  // Ã¥ÂÂ¨Ã¥Â±ÂÃ¥Â®ÂÃ¤Â½Â\n    },\n    cmenuPosition: {\n      top:  60px ,\n      left:  10px , // Ã¥Â±ÂÃ¥Â¼ÂÃ¥ÂÂ¨Ã¥Â±ÂÃ¥Â®ÂÃ¤Â½Â\n      right:  20px  // Ã¥Â±ÂÃ¥Â¼ÂÃ¥ÂÂ¨Ã¥Â±ÂÃ¥Â®ÂÃ¤Â½Â\n    },\n    cmenutop: {\n      // XÃ¦Â Â·Ã¥Â¼Â\n      width:  40px ,\n      height:  40px ,\n      border:  1px solid #005ab4 ,\n      color:  #005ab4 ,\n      right:  0px ,\n      top:  -40px ,\n      background:  white ,\n      borderbottom:  none ,\n      backgroundImg:  url(assets/close_map.png) ,\n      backgroundrepeat:  no-repeat ,\n      backgroundposition:  center,\n    },\n    cmenubody: {\n      width:  auto ,\n      height:  300px ,\n      border:  1px solid #005ab4 ,\n      background:  white ,\n      borderbottom:  none ,\n      borderradius:  5px 0px 0px 0px,\n    },\n    fontStyle: {\n      width:  120px ,\n      fontSize:  18px,\n    },\n    singleSize: {\n      width:  30px , // Ã¥ÂÂ¾Ã¦Â ÂÃ¥Â¤Â§Ã¥Â°Â\n      height:  30px ,\n      padding:  10px  // Ã¥ÂÂ¾Ã¦Â ÂÃ¥Â¤ÂÃ¨Â¾Â¹Ã¨Â·Â\n    },\n    select: {\n      width:  30px ,\n      height:  30px ,\n      src:  url(assets/select.png) no-repeat center / 70% 70%,\n    },\n    unselect: {\n      src:  url(assets/no_select.png) no-repeat center / 70% 70%,\n    },\n    background: {\n      backgroundsize:  100%,\n    },\n    layers: [\n      {\n        title:  Ã¦ÂÂ¯Ã¥ÂÂº ,\n        visible: false,\n        src:  url(assets/show_map.png),\n      },\n      {\n        title:  Ã¤Â¹Â¡Ã¦ÂÂÃ¦ÂÂÃ¦Â¸Â¸Ã¥ÂÂº ,\n        visible: false,\n        src:  url(assets/show_map.png),\n      },\n      {\n        title:  Ã¦ÂÂ°Ã¤Â¸ÂÃ¦ÂÂ ,\n        visible: false,\n        src:  url(assets/show_map.png),\n      },\n      {\n        title:  Ã©Â¤ÂÃ©Â¥Â® ,\n        visible: false,\n        src:  url(assets/show_map.png),\n      },\n      {\n        title:  Ã¦ÂÂÃ¦Â¸Â¸Ã©ÂÂÃ¥ÂºÂ ,\n        visible: false,\n        src:  url(assets/show_map.png),\n      },\n      {\n        title:  Ã¤Â¸Â»Ã©Â¢ÂÃ¤Â½ÂÃ¥Â®Â¿ ,\n        visible: false,\n        src:  url(assets/show_map.png),\n      }\n    ]\n  };\n   */\n  @Input('config')\n  set config(value: any) {\n    // Ã¥ÂÂÃ¥Â¤ÂÃ§ÂÂ\n    this._config = Object.assign({}, this.defaultConfig, value);\n  }\n\n  private defaultConfig = {\n    size: {\n      width: '50px', // Ã¥ÂÂÃ¥Â§ÂÃ¥Â®Â½Ã¥ÂºÂ¦\n      height: '50px' // Ã¥ÂÂÃ¥Â§ÂÃ©Â«ÂÃ¥ÂºÂ¦\n    },\n    position: {\n      top: '10px',\n      left: '10px', // Ã¥ÂÂ¨Ã¥Â±ÂÃ¥Â®ÂÃ¤Â½Â\n      right: '0px' // Ã¥ÂÂ¨Ã¥Â±ÂÃ¥Â®ÂÃ¤Â½Â\n    },\n    cmenuPosition: {\n      top: '60px',\n      left: '10px', // Ã¥Â±ÂÃ¥Â¼ÂÃ¥ÂÂ¨Ã¥Â±ÂÃ¥Â®ÂÃ¤Â½Â\n      right: '20px' // Ã¥Â±ÂÃ¥Â¼ÂÃ¥ÂÂ¨Ã¥Â±ÂÃ¥Â®ÂÃ¤Â½Â\n    },\n    cmenutop: {\n      // XÃ¦Â Â·Ã¥Â¼Â\n      width: '40px',\n      height: '40px',\n      border: '1px solid #005ab4',\n      color: '#005ab4',\n      right: '0px',\n      top: '-40px',\n      background: 'white',\n      borderbottom: 'none',\n      backgroundImg: 'url(assets/close_map.png)',\n      backgroundrepeat: 'no-repeat',\n      backgroundposition: 'center'\n    },\n    cmenubody: {\n      width: 'auto',\n      height: '300px',\n      border: '1px solid #005ab4',\n      background: 'white',\n      borderbottom: 'none',\n      borderradius: '5px 0px 0px 0px'\n    },\n    fontStyle: {\n      width: '120px',\n      fontSize: '18px'\n    },\n    singleSize: {\n      width: '30px', // Ã¥ÂÂ¾Ã¦Â ÂÃ¥Â¤Â§Ã¥Â°Â\n      height: '30px',\n      padding: '10px' // Ã¥ÂÂ¾Ã¦Â ÂÃ¥Â¤ÂÃ¨Â¾Â¹Ã¨Â·Â\n    },\n    select: {\n      width: '30px',\n      height: '30px',\n      src: 'url(assets/select.png)'\n    },\n    bgStyle: {\n      backgroundrepeat: 'no-repeat',\n      backgroundposition: 'center',\n      backgroundsize: '100% 100%'\n    },\n    unselect: {\n      src: 'url(assets/no_select.png)'\n    },\n    background: {\n      backgroundsize: '100%'\n    },\n    layers: [\n      {\n        title: 'Ã¦ÂÂ¯Ã¥ÂÂº',\n        visible: false,\n        src: 'url(assets/show_map.png)'\n      },\n      {\n        title: 'Ã¤Â¹Â¡Ã¦ÂÂÃ¦ÂÂÃ¦Â¸Â¸Ã¥ÂÂº',\n        visible: false,\n        src: 'url(assets/show_map.png)'\n      },\n      {\n        title: 'Ã¦ÂÂ°Ã¤Â¸ÂÃ¦ÂÂ',\n        visible: false,\n        src: 'url(assets/show_map.png)'\n      },\n      {\n        title: 'Ã©Â¤ÂÃ©Â¥Â®',\n        visible: false,\n        src: 'url(assets/show_map.png)'\n      },\n      {\n        title: 'Ã¦ÂÂÃ¦Â¸Â¸Ã©ÂÂÃ¥ÂºÂ',\n        visible: false,\n        src: 'url(assets/show_map.png)'\n      },\n      {\n        title: 'Ã¤Â¸Â»Ã©Â¢ÂÃ¤Â½ÂÃ¥Â®Â¿',\n        visible: false,\n        src: 'url(assets/show_map.png)'\n      }\n    ]\n  };\n  // Ã¦ÂÂ¾Ã§Â¤Âº\n  show(): void {\n    this.hide = true;\n  }\n  // Ã¥Â½Â±Ã¨ÂÂ\n  vanish(): void {\n    this.hide = false;\n  }\n  // Ã§ÂÂ¹Ã¥ÂÂ»Ã¤ÂºÂÃ¤Â»Â¶Ã¯Â¼ÂÃ¦ÂÂ¯Ã¥ÂÂ¦Ã¤ÂºÂÃ¦ÂÂ¥\n  showitem(item: { title: any; visible: boolean }): void {\n    this.outer.emit(item);\n    if (this.mutex === true) {\n      this.config.layers.forEach((value: { title: any; visible: boolean }) => {\n        if (value.title === item.title) {\n          value.visible = true;\n        } else {\n          value.visible = false;\n        }\n      });\n    } else {\n      item.visible = !item.visible;\n    }\n    this.sum = 0;\n    this.config.layers.forEach((value: { title: any; visible: boolean }) => {\n      if (value.visible === true) {\n        this.sum++;\n        if (this.sum === this.config.layers.length) {\n          this.flag = true;\n        } else {\n          this.flag = false;\n        }\n      }\n    });\n  }\n  // Ã¥ÂÂ¨Ã©ÂÂ\n  allitem(): void {\n    this.flag = true;\n    this.config.layers.forEach((value: { title: any; visible: boolean }) => {\n      value.visible = true;\n    });\n  }\n  // Ã¥ÂÂ¨Ã¤Â¸ÂÃ©ÂÂ\n  cancelitem(): void {\n    this.flag = false;\n    this.config.layers.forEach((value: { title: any; visible: boolean }) => {\n      value.visible = false;\n    });\n  }\n\n  ngOnInit() {\n    this.mySwiper = {\n      direction: 'vertical',\n      slidesPerView: 'auto',\n      freeMode: true,\n      scrollbar: {\n        el: '.swiper-scrollbar'\n      },\n      mousewheel: true\n    };\n  }\n}\n","import {\n  Component,\n  OnInit,\n  Input,\n  ChangeDetectorRef,\n  ViewChild,\n  Output,\n  EventEmitter\n} from '@angular/core';\nimport { MapComponent } from '../../map/map.component';\nimport { Map } from 'handsmap-map-client/openlayers/Map';\nimport { Style, Circle, Fill, Stroke, Icon } from 'ol/style';\nimport {\n  TileXYZLayer,\n  PointLayer,\n  PolygonLayer,\n  LineLayer,\n  MixLayer,\n  BaseLayer,\n  BaseVectorLayer\n} from 'handsmap-map-client/openlayers/layer';\nimport { ServiceUtil } from 'handsmap-map-client/openlayers/util';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'tgip-ol-point-layer',\n  templateUrl: './point-layer.component.html',\n  styleUrls: ['./point-layer.component.css']\n})\nexport class PointLayerComponent implements OnInit {\n  constructor() {\n    this._visible = this.visible;\n    this._config = this.visible;\n    this._state = this.stateConfig || {};\n    this.initLayer();\n  }\n\n  /**\n   * Ã§ÂºÂ¿Ã¦Â Â·Ã¥Â¼ÂÃ¥ÂÂÃ¦ÂÂ°\n   * @param {any} style\n   * pointStyle(feature, resolution) {\n    const styles = [];\n    const style01 = new ol.style.Style({\n      image: new ol.style.Icon({\n        // [0.5,0.5]Ã¨Â¡Â¨Ã§Â¤ÂºÃ¥ÂÂÃ¦Â ÂÃ¥Â¯Â¹Ã¥ÂºÂÃ§Â¬Â¦Ã¥ÂÂ·Ã¤Â¸Â­Ã¥Â¿ÂÃ¯Â¼Â[0.5,1]Ã¨Â¡Â¨Ã§Â¤ÂºÃ¥ÂÂÃ¦Â ÂÃ¥Â¯Â¹Ã¥ÂºÂÃ§Â¬Â¦Ã¥ÂÂ·Ã¥ÂºÂÃ©ÂÂ¨Ã¤Â¸Â­Ã©ÂÂ´Ã§ÂÂ¹\n        anchor: [0.5, 0.5],\n        anchorXUnits: fraction,\n        anchorYUnits: fraction,\n        opacity: 1,\n        src: assets/eatting.png // Ã§Â¬Â¦Ã¥ÂÂ·Ã¥ÂÂ¾Ã§ÂÂurl\n      }),\n      text: new ol.style.Text({\n        textAlign: center , // Ã¦ÂÂÃ¦ÂÂ¬Ã¦Â ÂÃ¦Â³Â¨ Ã¥Â¯Â¹Ã©Â½ÂÃ¦ÂÂ¹Ã¥Â¼Â\n        textBaseline:  middle , // Ã¦ÂÂÃ¦ÂÂ¬Ã¥ÂÂºÃ§ÂºÂ¿Ã¤Â¸Âºmiddle,\n        font:  bold 22px Arial , // Ã¥Â­ÂÃ¤Â½Â Ã¥Â­ÂÃ¥ÂÂ· Ã¥Â­ÂÃ¤Â½Â\n        text: feature.get( name ), // Ã¦Â ÂÃ¦Â³Â¨Ã§ÂÂÃ¥ÂÂÃ¥Â®Â¹\n        fill: new ol.style.Fill({\n          color:  rgba(255,0,0,0.9)  // Ã¥Â­ÂÃ¤Â½ÂÃ©Â¢ÂÃ¨ÂÂ²\n        }),\n        // Ã¥Â­ÂÃ¤Â½ÂÃ¥Â¤ÂÃ¦ÂÂÃ§ÂÂÃ©Â¢ÂÃ¨ÂÂ²Ã¥ÂÂÃ¥Â®Â½Ã¥ÂºÂ¦\n        stroke: new ol.style.Stroke({\n          color:  rgba(0,255,0,0.7) ,\n          width: 3\n        }),\n        offsetX: 0, // Ã¥ÂÂÃ§Â§Â»Ã©ÂÂ x Ã¥ÂÂÃ¦Â ÂÃ¯Â¼ÂÃ¥ÂÂÃ¤Â½ÂÃ¤Â¸ÂºÃ¥ÂÂÃ§Â´Â Ã¯Â¼Â\n        offsetY: -20, // Ã¥ÂÂÃ§Â§Â»Ã©ÂÂ y Ã¥ÂÂÃ¦Â ÂÃ¯Â¼ÂÃ¥ÂÂÃ¤Â½ÂÃ¤Â¸ÂºÃ¥ÂÂÃ§Â´Â Ã¯Â¼Â\n        rotation: 0 // Ã¦ÂÂÃ¨Â½Â¬ Ã©Â»ÂÃ¨Â®Â¤Ã¤Â¸Âº0\n      })\n    });\n    styles.push(style01);\n    return styles;\n  }\n   */\n  @Input('style')\n  set setStyle(value: Function) {\n    this.pointLayer.setStyle(value);\n  }\n\n  /**\n   * Ã¥ÂÂ¾Ã¥Â±ÂÃ¦Â Â·Ã¥Â¼ÂÃ¥ÂÂÃ¦ÂÂ°\n   * @param {any} config\n   * @example\n   * {\n    coordsField: point_geometry,\n    visible: true\n  };\n   */\n  @Input('config')\n  set setConfig(value: object) {\n    this._config = Object.assign({}, this.visible, value);\n  }\n  // Ã¦ÂÂ´Ã¦ÂÂ° Ã¥ÂÂ¯Ã¨Â§ÂÃ¦ÂÂ§\n  @Input('visible')\n  set setVisible(value: boolean) {\n    this._visible = value;\n    this.updateVisible();\n  }\n  _visible: boolean;\n\n  /**\n   * Ã¥ÂÂ°Ã¥ÂÂ¾Ã¥ÂÂÃ¦ÂÂ°\n   * @param {any} map\n   */\n  @Input('map')\n  set setMap(value: MapComponent) {\n    // console.log('Input++++++++++++++++++++++++++++++++++++++++++++++++++');\n    if (!value) {\n      return;\n    }\n    console.log('Ã¥Â·Â²Ã§Â»ÂÃ¥Â®Â map Ã§Â»ÂÃ¤Â»Â¶ Ã¥Â®ÂÃ¤Â¾Â');\n    this._map = value;\n    this._map.map.addLayer(this.pointLayer);\n  }\n\n  // Ã¦ÂÂ°Ã¦ÂÂ®\n  private _data: MapComponent;\n  /**\n   * Ã¦ÂÂ°Ã¦ÂÂ®Ã¥ÂÂÃ¦ÂÂ°\n   * @param {any} data\n   * @example\n   * [\n    {\n      point_geometry:  point(118.82266835594554 31.89450352498709) ,\n      // coordinates: [119.11534205966268, 32.990513007535085],\n      name:  Ã¤Â¸ÂÃ¥ÂÂÃ¥Â¤Â§Ã¥Â­Â¦Ã¯Â¼Â\n    },\n    {\n      point_geometry:  point(118.96258066308839 33.00050674375958) ,\n      // coordinates: [118.96258066308839, 33.00050674375958],\n      name:  Ã¥ÂÂ±Ã¥ÂÂÃ¦ÂÂÃ¯Â¼Â\n    },\n    {\n      point_geometry:  point(119.007314529998 32.97385678049428) ,\n      // coordinates: [119.007314529998, 32.97385678049428],\n      name:  Ã¨Â§ÂÃ©ÂÂ³Ã¥Â¯ÂºÃ¯Â¼Â\n    },\n    {\n      point_geometry:  point(119.06394570193676 32.8291855513398) ,\n      // coordinates: [119.06394570193676, 32.8291855513398],\n      name:  Ã©ÂÂÃ¥ÂÂÃ©ÂÂÃ¯Â¼Â\n    }\n  ];\n */\n  @Input('data')\n  set setData(value: any) {\n    // Ã¥ÂÂÃ¥Â¤ÂÃ§ÂÂ\n    if (!value) {\n      return;\n    }\n    let dataR = value;\n\n    const coordFieldConfig = { wktField: this._state['coordsField'] };\n    if (this._map.config.coordinateSystimSrid === 'EPSG:3857') {\n      dataR = ServiceUtil.ConvertPointsll2tmerc(value, coordFieldConfig); // dataR\n    }\n    // Ã¥ÂÂÃ¦Â¸ÂÃ§Â©ÂºÃ¯Â¼ÂÃ¥ÂÂÃ¥Â¢ÂÃ¥ÂÂ \n    this._data = value;\n    this.pointLayer.clearFeatures();\n    this.pointLayer.addFeatures(dataR, coordFieldConfig);\n  }\n  pointLayer: any;\n  config: any;\n  _state: any;\n  _config: any;\n\n  private visible: true;\n\n  private stateConfig = {\n    coordsField: 'point_geometry'\n  };\n\n  private _map: MapComponent;\n\n  // Ã¥ÂÂÃ¥Â§ÂÃ¥ÂÂÃ¥ÂÂ¾Ã¥Â±ÂÃ¥ÂÂªÃ§ÂÂ±Ã¤Â¸ÂÃ¦Â¬Â¡\n  initLayer() {\n    this.pointLayer = new PointLayer({\n      layerName: 'pointLayer',\n      infoTemplate: '',\n      dataList: [],\n      coordsField: { x: 'coordinates', y: 'coordinates' }\n    });\n    // Ã©Â»ÂÃ¨Â®Â¤Ã¦Â Â·Ã¥Â¼ÂÃ©ÂÂ®Ã©Â¢Â\n    const defaultStyle = new Style({\n      image: new Icon({\n        radius: 10,\n        fill: new Fill({\n          color: '#ff0000'\n        }),\n        stroke: new Stroke({\n          color: '#ff0000',\n          width: 2\n        }),\n        anchor: [0.5, 0.5],\n        anchorXUnits: 'fraction',\n        anchorYUnits: 'fraction',\n        opacity: 1,\n        src: 'assets/eatting.png' // Ã§Â¬Â¦Ã¥ÂÂ·Ã¥ÂÂ¾Ã§ÂÂurl\n      })\n    });\n    this.pointLayer.setStyle(defaultStyle);\n  }\n  updateVisible() {\n    this.pointLayer.setVisible(this._visible);\n  }\n  // Ã©ÂÂÃ§Â½Â®Ã©ÂÂÃ©Â¡Â¹\n\n  ngOnInit() {\n    // console.log('Ã¥ÂÂÃ¥Â§ÂÃ¥ÂÂ++++++++++++++++++++++++++++++++++++++++++++++++++');\n  }\n}\n","import {\n  Component,\n  OnInit,\n  Input,\n  ChangeDetectorRef,\n  ViewChild,\n  Output,\n  EventEmitter\n} from '@angular/core';\nimport { MapComponent } from '../../map/map.component';\nimport { Style, Circle, Fill, Stroke, Text } from 'ol/style';\nimport { Map } from 'handsmap-map-client/openlayers/Map';\nimport { ServiceUtil } from 'handsmap-map-client/openlayers/util';\nimport {\n  TileXYZLayer,\n  PointLayer,\n  PolygonLayer,\n  LineLayer,\n  MixLayer,\n  BaseLayer,\n  BaseVectorLayer\n} from 'handsmap-map-client/openlayers/layer';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'tgip-ol-line-layer',\n  templateUrl: './line-layer.component.html',\n  styleUrls: ['./line-layer.component.css']\n})\nexport class LineLayerComponent implements OnInit {\n  constructor() {\n    this._config = this.defaultConfig || {};\n    this.initLayer();\n  }\n  /**\n   * Ã§ÂºÂ¿Ã¦Â Â·Ã¥Â¼ÂÃ¥ÂÂÃ¦ÂÂ°\n   * @param {any} style\n   * @example\n   *   lineStyle(feature, resolution) {\n    const styles = [];\n    const style = new ol.style.Style({\n      stroke: new ol.style.Stroke({\n        color: 'rgba(255,0,0,0.6)',\n        width: 5\n      }),\n      text: new ol.style.Text({\n        textAlign: 'center', // Ã¦ÂÂÃ¦ÂÂ¬Ã¦Â ÂÃ¦Â³Â¨ Ã¥Â¯Â¹Ã©Â½ÂÃ¦ÂÂ¹Ã¥Â¼Â\n        textBaseline: 'middle', // Ã¦ÂÂÃ¦ÂÂ¬Ã¥ÂÂºÃ§ÂºÂ¿Ã¤Â¸Âºmiddle,\n        font: 'bold 22px Arial', // Ã¥Â­ÂÃ¤Â½Â Ã¥Â­ÂÃ¥ÂÂ· Ã¥Â­ÂÃ¤Â½Â\n        text: feature.get('name'), // Ã¦Â ÂÃ¦Â³Â¨Ã§ÂÂÃ¥ÂÂÃ¥Â®Â¹\n        fill: new ol.style.Fill({\n          color: 'rgba(255,0,0,0.9)' // Ã¥Â­ÂÃ¤Â½ÂÃ©Â¢ÂÃ¨ÂÂ²\n        }),\n        // Ã¥Â­ÂÃ¤Â½ÂÃ¥Â¤ÂÃ¦ÂÂÃ§ÂÂÃ©Â¢ÂÃ¨ÂÂ²Ã¥ÂÂÃ¥Â®Â½Ã¥ÂºÂ¦\n        stroke: new ol.style.Stroke({\n          color: 'rgba(0,255,0,0.7)',\n          width: 3\n        }),\n        offsetX: 0, // Ã¥ÂÂÃ§Â§Â»Ã©ÂÂ x Ã¥ÂÂÃ¦Â ÂÃ¯Â¼ÂÃ¥ÂÂÃ¤Â½ÂÃ¤Â¸ÂºÃ¥ÂÂÃ§Â´Â Ã¯Â¼Â\n        offsetY: -20, // Ã¥ÂÂÃ§Â§Â»Ã©ÂÂ y Ã¥ÂÂÃ¦Â ÂÃ¯Â¼ÂÃ¥ÂÂÃ¤Â½ÂÃ¤Â¸ÂºÃ¥ÂÂÃ§Â´Â Ã¯Â¼Â\n        rotation: 0 // Ã¦ÂÂÃ¨Â½Â¬ Ã©Â»ÂÃ¨Â®Â¤Ã¤Â¸Âº0\n      })\n    });\n\n    styles.push(style);\n    return styles;\n  }\n   */\n  @Input('style')\n  set setStyle(value: Function) {\n    this.lineLayer.setStyle(value);\n  }\n\n  /**\n   * Ã¥ÂÂ¾Ã¥Â±ÂÃ¦Â Â·Ã¥Â¼ÂÃ¥ÂÂÃ¦ÂÂ°\n   * @param {any} config\n   * @example\n   * {\n    coordsField: line_geometry,\n    visible: true\n  };\n   */\n  @Input('config')\n  set setConfig(value: object) {\n    this._config = Object.assign({}, this.defaultConfig, value);\n\n  }\n\n    // Ã¦ÂÂ´Ã¦ÂÂ° Ã¥ÂÂ¯Ã¨Â§ÂÃ¦ÂÂ§\n    @Input('visible')\n    set setVisible(value: boolean) {\n      this._visible = value;\n      this.updateVisible();\n    }\n    _visible: boolean;\n\n  /**\n   * Ã¥ÂÂ°Ã¥ÂÂ¾Ã¥ÂÂÃ¦ÂÂ°\n   * @param {any} map\n   */\n  @Input('map')\n  set setMap(value: MapComponent) {\n    if (!value) {\n      return;\n    }\n    console.log('Ã¥Â·Â²Ã§Â»ÂÃ¥Â®Â map Ã§Â»ÂÃ¤Â»Â¶ Ã¥Â®ÂÃ¤Â¾Â');\n    this._map = value;\n    this._map.map.addLayer(this.lineLayer);\n  }\n  private _data: MapComponent;\n  /**\n   * Ã¦ÂÂ°Ã¦ÂÂ®Ã¥ÂÂÃ¦ÂÂ°\n   * @param {any} data\n   * @example\n   * [\n    {\n      line_geometry:\n          LINESTRING (119.1124867064557 32.98860943873043, 119.2048097934819 32.92721934478,119.20005087147024 32.99527192954675)  ,\n      name:   Ã¦Â·Â®Ã¨ÂÂÃ¤Â¿Â¡Ã§ÂÂ¨Ã§Â¤Â¾Ã¯Â¼Â\n    },\n    {\n      line_geometry:\n          LINESTRING (119.1124867064557 32.98860943873043, 119.2048097934819 32.92721934478,119.20005087147024 32.99527192954675)  ,\n      name:   Ã¦Â·Â®Ã¨ÂÂÃ¤Â¿Â¡Ã§ÂÂ¨Ã§Â¤Â¾Ã¯Â¼Â\n    }\n  ];\n */\n  @Input('data')\n  set setData(value: any) {\n    // Ã¥ÂÂÃ¥Â¤ÂÃ§ÂÂ\n    if (!value) {\n      return;\n    }\n    let dataR = value;\n\n    const coordFieldConfig = { wktField: this._config['coordsField'] };\n    if (this._map.config.coordinateSystimSrid === 'EPSG:3857') {\n      dataR = ServiceUtil.ConvertLinesll2tmerc(\n        value,\n        coordFieldConfig\n      ); // dataR\n    }\n    // Ã¥ÂÂÃ¦Â¸ÂÃ§Â©ÂºÃ¯Â¼ÂÃ¥ÂÂÃ¥Â¢ÂÃ¥ÂÂ \n    this._data = value;\n    this.lineLayer.clearFeatures();\n    this.lineLayer.addFeatures(dataR, coordFieldConfig);\n  }\n\n  lineLayer: any;\n  _config: object;\n\n  private defaultConfig = {\n    coordsField: 'line_geometry',\n    visible: true\n  };\n\n  private _map: MapComponent;\n\n  // Ã¥ÂÂÃ¥Â§ÂÃ¥ÂÂÃ¥ÂÂ¾Ã¥Â±ÂÃ¥ÂÂªÃ§ÂÂ±Ã¤Â¸ÂÃ¦Â¬Â¡\n  initLayer() {\n    this.lineLayer = new LineLayer({\n      layerName: 'lineLayer',\n      infoTemplate: '',\n      dataList: [],\n      coordsField: { x: 'coordinates', y: 'coordinates' }\n    });\n    // Ã©Â»ÂÃ¨Â®Â¤Ã¦Â Â·Ã¥Â¼ÂÃ©ÂÂ®Ã©Â¢Â\n    const defaultStyle = new Style({\n      stroke: new Stroke({\n        color: 'rgba(255,0,0,0.6)',\n        width: 5\n      })\n    });\n    this.lineLayer.setStyle(defaultStyle);\n  }\n\n  updateVisible() {\n    this.lineLayer.setVisible(this._visible);\n  }\n\n  // Ã©ÂÂÃ§Â½Â®Ã©ÂÂÃ©Â¡Â¹\n\n  ngOnInit() {}\n}\n","import {\n  Component,\n  OnInit,\n  Input,\n  ChangeDetectorRef,\n  ViewChild,\n  Output,\n  EventEmitter\n} from '@angular/core';\nimport { MapComponent } from '../../map/map.component';\nimport { Style, Circle, Fill, Stroke } from 'ol/style';\nimport { Map } from 'handsmap-map-client/openlayers/Map';\nimport { ServiceUtil } from 'handsmap-map-client/openlayers/util';\nimport {\n  TileXYZLayer,\n  PointLayer,\n  PolygonLayer,\n  LineLayer,\n  MixLayer,\n  BaseLayer,\n  BaseVectorLayer\n} from 'handsmap-map-client/openlayers/layer';\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'tgip-ol-polygon-layer',\n  templateUrl: './polygon-layer.component.html',\n  styleUrls: ['./polygon-layer.component.css']\n})\nexport class PolygonLayerComponent implements OnInit {\n  constructor() {\n    this._config = this.defaultConfig || {};\n    this.initLayer();\n  }\n  /**\n   * Ã©ÂÂ¢Ã¦Â Â·Ã¥Â¼ÂÃ¥ÂÂÃ¦ÂÂ°\n   * @param {any} style\n   * polygonStyle(feature, resolution) {\n    const styles = [];\n     const styles = [];\n    const style = new ol.style.Style({\n      fill: new ol.style.Fill({\n        color:  rgba(255,099,49,0.6),\n      }),\n      stroke: new ol.style.Stroke({\n        color:  rgba(255,0,0,0.6) ,\n        width: 3\n      })\n    });\n\n    styles.push(style);\n    return styles;\n  }\n   */\n  @Input('style')\n  set setStyle(value: Function) {\n    this.polygonLayer.setStyle(value);\n  }\n\n  /**\n   * Ã¥ÂÂ¾Ã¥Â±ÂÃ¦Â Â·Ã¥Â¼ÂÃ¥ÂÂÃ¦ÂÂ°\n   * @param {any} config\n   * @example\n   * {\n    coordsField: polygon_geometry,\n    visible: true\n  };\n   */\n  @Input('config')\n  set setConfig(value: object) {\n    this._config = Object.assign({}, this.defaultConfig, value);\n  }\n  // Ã¦ÂÂ´Ã¦ÂÂ° Ã¥ÂÂ¯Ã¨Â§ÂÃ¦ÂÂ§\n  @Input('visible')\n  set setVisible(value: boolean) {\n    this._visible = value;\n    this.updateVisible();\n  }\n  _visible: boolean;\n  // Ã¥ÂÂ°Ã¥ÂÂ¾Ã§Â»ÂÃ¤Â»Â¶\n  @Input('map')\n  set setMap(value: MapComponent) {\n    if (!value) {\n      return;\n    }\n    console.log('Ã¥Â·Â²Ã§Â»ÂÃ¥Â®Â map Ã§Â»ÂÃ¤Â»Â¶ Ã¥Â®ÂÃ¤Â¾Â');\n    this._map = value;\n    this._map.map.addLayer(this.polygonLayer);\n  }\n\n  /**\n   * Ã¦ÂÂ°Ã¦ÂÂ®\n   * @param {any} data\n   * @example\n   *  [\n    {\n      polygon_geometry:\n         MULTIPOLYGON (((118.99089624905777 33.002410312564244,119.19100891964808 32.99527192954675,  +\n         119.08964388079971 33.08283609456131))) ,\n      name:  Ã¦Â·Â®Ã¨ÂÂÃ¤Â¿Â¡Ã§ÂÂ¨Ã§Â¤Â¾Ã¯Â¼Â\n    }\n  ];\n   */\n  private _data: MapComponent;\n  @Input('data')\n  set setData(value: any) {\n    // Ã¥ÂÂÃ¥Â¤ÂÃ§ÂÂ\n    if (!value) {\n      return;\n    }\n    let dataR = value;\n\n    const coordFieldConfig = { wktField: this._config['coordsField'] };\n    if (this._map.config.coordinateSystimSrid === 'EPSG:3857') {\n      dataR = ServiceUtil.ConvertPolygonsll2tmerc()(\n        value,\n        coordFieldConfig\n      ); // dataR\n    }\n    // Ã¥ÂÂÃ¦Â¸ÂÃ§Â©ÂºÃ¯Â¼ÂÃ¥ÂÂÃ¥Â¢ÂÃ¥ÂÂ \n    this._data = value;\n    this.polygonLayer.clearFeatures();\n    this.polygonLayer.addFeatures(dataR, coordFieldConfig);\n  }\n\n  polygonLayer: any;\n  _config: object;\n\n  private defaultConfig = {\n    coordsField: 'polygon_geometry',\n    visible: true\n  };\n\n  private _map: MapComponent;\n\n  // Ã¥ÂÂÃ¥Â§ÂÃ¥ÂÂÃ¥ÂÂ¾Ã¥Â±ÂÃ¥ÂÂªÃ§ÂÂ±Ã¤Â¸ÂÃ¦Â¬Â¡\n  initLayer() {\n    this.polygonLayer = new PolygonLayer({\n      layerName: 'polygonLayer',\n      infoTemplate: '',\n      dataList: [],\n      coordsField: { x: 'coordinates', y: 'coordinates' }\n    });\n    // Ã©Â»ÂÃ¨Â®Â¤Ã¦Â Â·Ã¥Â¼ÂÃ©ÂÂ®Ã©Â¢Â\n    const defaultStyle = new Style({\n      fill: new Fill({\n        color: 'rgba(255,099,49,0.6)'\n      }),\n      stroke: new Stroke({\n        color: 'rgba(255,0,0,0.6)',\n        width: 3\n      })\n    });\n    this.polygonLayer.setStyle(defaultStyle);\n  }\n\n  updateVisible() {\n    this.polygonLayer.setVisible(this._visible);\n  }\n\n  // Ã©ÂÂÃ§Â½Â®Ã©ÂÂÃ©Â¡Â¹\n\n  ngOnInit() { }\n}\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'tgip-ol-compass',\n  templateUrl: './compass.component.html',\n  styleUrls: ['./compass.component.css']\n})\nexport class CompassComponent implements OnInit {\n\n  constructor() {\n    this.config = this.defaultConfig;\n  }\n  private _config: any;\n  get config(): any {\n    return this._config;\n  }\n  /**\n   * Ã¦Â Â·Ã¥Â¼ÂÃ¥ÂÂÃ¦ÂÂ°\n   * @param {any} config\n   * @example\n   *\n   * private defaultConfig = {\n    visible: 'block',\n    background: '#000',\n    size: {\n      width: '50px', // Ã¦ÂÂ»Ã¥Â®Â½Ã¥ÂºÂ¦\n      height: '50px' // Ã¦ÂÂ»Ã©Â«ÂÃ¥ÂºÂ¦\n    },\n    position: {\n      top: '10px',\n      bottom: '10px',\n      right: '10px',\n      left: '10px' // Ã¥ÂÂ¨Ã¥Â±ÂÃ¥Â®ÂÃ¤Â½Â\n    },\n    image: {\n      src: 'assets/compass.png'\n    }\n  };\n   *\n   */\n  @Input('config')\n  set config(value: any) {\n    this._config = Object.assign({}, this.defaultConfig, value);\n  }\n  // Ã©Â»ÂÃ¨Â®Â¤Ã¥ÂÂ¾Ã¥Â±ÂÃ¥ÂÂÃ¦ÂÂ°\n  private defaultConfig = {};\n  ngOnInit() {\n  }\n\n}\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'tgip-ol-heatmap-legend',\n  templateUrl: './heatmap-legend.component.html',\n  styleUrls: ['./heatmap-legend.component.css']\n})\nexport class HeatmapLegendComponent implements OnInit {\n  constructor() {\n    this.config = this.defaultConfig;\n  }\n  private _config: any;\n  get config(): any {\n    return this._config;\n  }\n  /**\n   * Ã¦Â Â·Ã¥Â¼ÂÃ¥ÂÂÃ¦ÂÂ°1\n   * @param {any} config\n   * @example   *\n   * {\n    visible: 'block',\n    color: '#fff',\n    size: {\n      width: '100px', // Ã¦ÂÂ»Ã¥Â®Â½Ã¥ÂºÂ¦\n      height: '25px' // Ã¦ÂÂ»Ã©Â«ÂÃ¥ÂºÂ¦\n    },\n    position: {\n      top: '',\n      bottom: '10px',\n      right: '',\n      left: '10px' // Ã¥ÂÂ¨Ã¥Â±ÂÃ¥Â®ÂÃ¤Â½Â\n    },\n    datas: [\n      {\n        title: 'Ã¨ÂÂÃ©ÂÂ',\n        background: 'rgba(0, 172, 0,1)',\n      },\n      {\n        title: 'Ã¨Â¾ÂÃ¨ÂÂÃ©ÂÂ',\n        background: '#0000FF',\n      },\n      {\n        title: 'Ã¤Â¸ÂÃ¨ÂÂ¬',\n        background: '#FFFF00',\n      },\n      {\n        title: 'Ã¦ÂÂ¥Ã¦ÂÂ¤',\n        background: '#00FFFF',\n      }\n    ]\n  };\n   *\n   */\n  @Input('config')\n  set config(value: any) {\n    this._config = Object.assign({}, this.defaultConfig, value);\n  }\n  // Ã©Â»ÂÃ¨Â®Â¤Ã¥ÂÂ¾Ã¥Â±ÂÃ¥ÂÂÃ¦ÂÂ°\n  private defaultConfig = {};\n  ngOnInit() {\n  }\n\n}\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'tgip-ol-scenic-legend',\n  templateUrl: './scenic-legend.component.html',\n  styleUrls: ['./scenic-legend.component.css']\n})\nexport class ScenicLegendComponent implements OnInit {\n  constructor() {\n    this.config = this.defaultConfig;\n  }\n  hide: any;\n  flag: any;\n  private _config: any;\n  get config(): any {\n    return this._config;\n  }\n  /**\n   * Ã¦Â Â·Ã¥Â¼ÂÃ¥ÂÂÃ¦ÂÂ°\n   * @param {any} config\n   * @example\n   *\n   * private defaultConfig = {\n    openStyle: {\n      size: {\n        width: '50px', // Ã¦ÂÂ»Ã¥Â®Â½Ã¥ÂºÂ¦\n        height: '50px' // Ã¦ÂÂ»Ã©Â«ÂÃ¥ÂºÂ¦\n      },\n      position: {\n        top: '',\n        bottom: '10px',\n        right: '',\n        left: '10px' // Ã¥ÂÂ¨Ã¥Â±ÂÃ¥Â®ÂÃ¤Â½Â\n      },\n      openImage: 'assets/show_map.png',\n    },\n    closeStyle: {\n      size: {\n        width: '50px', // Ã¦ÂÂ»Ã¥Â®Â½Ã¥ÂºÂ¦\n        height: '50px' // Ã¦ÂÂ»Ã©Â«ÂÃ¥ÂºÂ¦\n      },\n      position: {\n        top: '10px',\n        bottom: '10px',\n        right: '10px',\n        left: '10px' // Ã¥ÂÂ¨Ã¥Â±ÂÃ¥Â®ÂÃ¤Â½Â\n      },\n      closeImage: 'assets/close.png',\n    },\n    title: 'Ã¥ÂÂ¾Ã¤Â¾Â',\n    gradestyle: {\n      color: 'white',\n      height: '20px',\n      width: '50px'\n    },\n    numberstyle: {\n      color: 'white',\n      width: '50px',\n      height: '20px'\n    },\n    Iconstyle: {\n      color: 'white',\n      width: '30px',\n      height: '30px'\n    },\n    visible: 'block',\n    background: '#000',\n    border: '1px solid #fff',\n    size: {\n      width: '200px', // Ã¦ÂÂ»Ã¥Â®Â½Ã¥ÂºÂ¦\n      height: 'auto' // Ã¦ÂÂ»Ã©Â«ÂÃ¥ÂºÂ¦\n    },\n    position: {\n      top: '10px',\n      bottom: '10px',\n      right: '10px',\n      left: '10px' // Ã¥ÂÂ¨Ã¥Â±ÂÃ¥Â®ÂÃ¤Â½Â\n    },\n    datas0: [\n      {\n        title: 'Ã¦ÂÂ¯Ã¥ÂÂºÃ§Â­ÂÃ§ÂºÂ§',\n        visible: 'true', // Ã¦ÂÂ¾Ã§Â¤Âº\n        type: 'colorType',\n        color: 'white',\n        titleStyle: {\n          color: 'gray'\n        },\n        data: [{\n          name: '5A',\n          value: 'rgba(255,152,1,1)'\n        }, {\n          name: '4A',\n          value: 'rgba(159,224,96,1)'\n        }, {\n          name: '3A',\n          value: 'rgba(2,139,255,1)'\n        }, {\n          name: '2A',\n          value: 'rgba(21,112,176,1)'\n        }]\n      }],\n    datas1: [\n      {\n        title: 'AÃ¦ÂÂ¯Ã¥ÂÂºÃ¦ÂÂ°Ã©ÂÂÃ§Â»ÂÃ¨Â®Â¡',\n        visible: 'true', // Ã¦ÂÂ¾Ã§Â¤Âº\n        type: 'colorNum',\n        color: 'white',\n        titleStyle: {\n          color: 'gray',\n        },\n        data: [{\n          name: '30',\n          value: 'rgba(255,152,1,1)'\n        }, {\n          name: '40',\n          value: 'rgba(159,224,96,1)'\n        }, {\n          name: '50',\n          value: 'rgba(2,139,255,1)'\n        }, {\n          name: '60',\n          value: 'rgba(21,112,176,1)'\n        }]\n      }],\n    datas2: [\n      {\n        title: 'BÃ¦ÂÂ¯Ã¥ÂÂºÃ¦ÂÂ°Ã©ÂÂÃ§Â»ÂÃ¨Â®Â¡',\n        visible: 'true', // Ã¦ÂÂ¾Ã§Â¤Âº\n        type: 'colorNum',\n        color: 'white',\n        titleStyle: {\n          color: 'gray',\n        },\n        data: [{\n          name: '30',\n          src: 'assets/show_map.png',\n        }, {\n          name: '40',\n          src: 'assets/show_map.png',\n        }, {\n          name: '50',\n          src: 'assets/show_map.png',\n        }, {\n          name: '60',\n          src: 'assets/show_map.png',\n        }]\n      }],\n    datas5: [\n      {\n        title: 'BÃ¦ÂÂ¯Ã¥ÂÂºÃ¦ÂÂ°Ã©ÂÂÃ§Â»ÂÃ¨Â®Â¡88',\n        visible: 'true', // Ã¦ÂÂ¾Ã§Â¤Âº\n        type: 'colorNum',\n        color: 'white',\n        titleStyle: {\n          color: 'gray',\n        },\n        data: [{\n          name: '30',\n          src: 'assets/show_map.png',\n        }, {\n          name: '40',\n          src: 'assets/show_map.png',\n        }, {\n          name: '50',\n          src: 'assets/show_map.png',\n        }, {\n          name: '60',\n          src: 'assets/show_map.png',\n        }]\n      }]\n  };\n   *\n   */\n  @Input('config')\n  set config(value: any) {\n    this._config = Object.assign({}, this.defaultConfig, value);\n  }\n  // Ã©Â»ÂÃ¨Â®Â¤Ã¥ÂÂ¾Ã¥Â±ÂÃ¥ÂÂÃ¦ÂÂ°\n  private defaultConfig = {};\n\n  // Ã¦ÂÂ¾Ã§Â¤Âº\n  show(): void {\n    this.hide = false;\n  }\n  // Ã¥Â½Â±Ã¨ÂÂ\n  vanish(): void {\n    this.hide = true;\n  }\n  // mouseenter Ã§Â§Â»Ã¥ÂÂ¥\n  mouseenter(): void {\n    this.flag = true;\n\n  }\n  // mouseleave Ã§Â§Â»Ã¥ÂÂº\n  mouseleave(): void {\n    this.flag = false;\n  }\n  ngOnInit() {\n    this.hide = false;\n    this.flag = false;\n  }\n\n}\n","import { Component, OnInit, Input, Renderer, ElementRef, Renderer2 } from '@angular/core';\nimport Map from 'ol/Map.js';\nimport Overlay from 'ol/Overlay.js';\nimport View from 'ol/View.js';\nimport { toStringHDMS } from 'ol/coordinate.js';\nimport TileLayer from 'ol/layer/Tile.js';\nimport { fromLonLat, toLonLat } from 'ol/proj.js';\nimport OSM from 'ol/source/OSM.js';\nimport { SwiperConfigInterface } from 'ngx-swiper-wrapper';\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'tgip-ol-scenic-box',\n  templateUrl: './scenic-box.component.html',\n  styleUrls: ['./scenic-box.component.css']\n})\nexport class ScenicBoxComponent implements OnInit {\n\n  public mySwiper: SwiperConfigInterface = {};\n  marker: any;\n  layer: any;\n  overlay: any;\n  popup: any;\n  content: any;\n  container: any;\n  closer: any;\n  layers: any;\n  title: any;\n  starLevel: any;\n  constructor() {\n    this.config = this.defaultConfig;\n  }\n  @Input('map')\n  set setMap(value) {\n    if (!value) {\n      return;\n    }\n    console.log('Ã¥Â·Â²Ã§Â»ÂÃ¥Â®Â map Ã§Â»ÂÃ¤Â»Â¶ Ã¥Â®ÂÃ¤Â¾Â');\n    this.map = value;\n  }\n  private map: any;\n\n  private _config: any;\n  get config(): any {\n    return this._config;\n  }\n  @Input('config')\n  set config(value: any) {\n    this._config = Object.assign({}, this.defaultConfig, value);\n  }\n\n  // Ã©Â»ÂÃ¨Â®Â¤Ã¥ÂÂ¾Ã¥Â±ÂÃ¥ÂÂÃ¦ÂÂ°\n  private defaultConfig = {};\n  private _swiper: any;\n  get sw(): any {\n    return this._swiper;\n  }\n  @Input('sw')\n  set sw(value: any) {\n    this._swiper = Object.assign({}, this.mySwiper, value);\n    console.log(value);\n    this.initSwiper();\n  }\n  initSwiper() {\n    this.mySwiper = this._swiper;\n  }\n  ngOnInit() {\n    this.initSwiper();\n    this.content = document.getElementById('popup-content');\n    this.container = document.getElementById('popup');\n    this.closer = document.getElementById('popup-closer');\n    this.overlay = new Overlay({\n      element: this.container,\n      autoPan: true,\n      autoPanAnimation: {\n        duration: 250\n      }\n    });\n    const self = this;\n    this.closer.onclick = function () {\n      self.overlay.setPosition(undefined);\n      self.closer.blur();\n      return false;\n    };\n    this.map.addOverlay(this.overlay);\n    this.map.on('click', function (evt) {\n      // const coordinate = [118.76455002087813, 31.853814741787392];\n      // if (evt.coordinate === coordinate) {\n      //   self.overlay.setPosition(coordinate);\n      // }\n      // const coordinate = [118.76455002087813, 31.853814741787392];\n      const coordinate = evt.coordinate;\n      // self.content.innerHTML = '';\n      self.overlay.setPosition(coordinate);\n    });\n  }\n\n}\n","import { Component, OnInit, Input, Renderer, ElementRef, Renderer2 } from '@angular/core';\nimport Map from 'ol/Map.js';\nimport Overlay from 'ol/Overlay.js';\nimport View from 'ol/View.js';\nimport { toStringHDMS } from 'ol/coordinate.js';\nimport TileLayer from 'ol/layer/Tile.js';\nimport { fromLonLat, toLonLat } from 'ol/proj.js';\nimport OSM from 'ol/source/OSM.js';\nimport { SwiperConfigInterface } from 'ngx-swiper-wrapper';\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'tgip-ol-spot-box',\n  templateUrl: './spot-box.component.html',\n  styleUrls: ['./spot-box.component.css']\n})\nexport class SpotBoxComponent implements OnInit {\n\n  public mySwiper: SwiperConfigInterface = {};\n  marker: any;\n  layer: any;\n  overlay: any;\n  popup: any;\n  content: any;\n  container: any;\n  closer: any;\n  layers: any;\n  title: any;\n  starLevel: any;\n  constructor() {\n    this.config = this.defaultConfig;\n  }\n  @Input('map')\n  set setMap(value) {\n    if (!value) {\n      return;\n    }\n    console.log('Ã¥Â·Â²Ã§Â»ÂÃ¥Â®Â map Ã§Â»ÂÃ¤Â»Â¶ Ã¥Â®ÂÃ¤Â¾Â');\n    this.map = value;\n  }\n  private map: any;\n\n  private _config: any;\n  get config(): any {\n    return this._config;\n  }\n  @Input('config')\n  set config(value: any) {\n    this._config = Object.assign({}, this.defaultConfig, value);\n  }\n\n  // Ã©Â»ÂÃ¨Â®Â¤Ã¥ÂÂ¾Ã¥Â±ÂÃ¥ÂÂÃ¦ÂÂ°\n  private defaultConfig = {\n    title: 'Ã¨ÂÂA123456',\n    titleStyle: {\n      background: 'gainsboro',\n      fontSize: '18px',\n      color: '#000'\n    },\n    dataStyle: {\n      fontSize: '16px',\n      color: '#000'\n    },\n    data: [\n      {\n        name: 'Ã¨Â½Â¦Ã§ÂÂÃ¥ÂÂ·Ã§Â ÂÃ¯Â¼ÂÃ¨ÂÂA123456',\n      },\n      {\n        name: 'Ã¨Â½Â¦Ã§ÂÂÃ¥ÂÂ·Ã§Â ÂÃ¯Â¼ÂÃ¨ÂÂA123456',\n      },\n      {\n        name: 'Ã¨Â½Â¦Ã§ÂÂÃ¥ÂÂ·Ã§Â ÂÃ¯Â¼ÂÃ¨ÂÂA123456',\n      },\n      {\n        name: 'Ã¨Â½Â¦Ã§ÂÂÃ¥ÂÂ·Ã§Â ÂÃ¯Â¼ÂÃ¨ÂÂA123456',\n      },\n      {\n        name: 'Ã¨Â½Â¦Ã§ÂÂÃ¥ÂÂ·Ã§Â ÂÃ¯Â¼ÂÃ¨ÂÂA123456',\n      },\n      {\n        name: 'Ã¨Â½Â¦Ã§ÂÂÃ¥ÂÂ·Ã§Â ÂÃ¯Â¼ÂÃ¨ÂÂA123456',\n      }\n    ]\n  };\n\n  private _swiper: any;\n  get sw(): any {\n    return this._swiper;\n  }\n  @Input('sw')\n  set sw(value: any) {\n    this._swiper = Object.assign({}, this.mySwiper, value);\n    console.log(value);\n    this.initSwiper();\n  }\n  initSwiper() {\n    this.mySwiper = this._swiper;\n  }\n  ngOnInit() {\n    this.initSwiper();\n    this.content = document.getElementById('popup-content');\n    this.container = document.getElementById('popup');\n    this.closer = document.getElementById('popup-closer');\n    this.overlay = new Overlay({\n      element: this.container,\n      autoPan: true,\n      autoPanAnimation: {\n        duration: 250\n      }\n    });\n    const self = this;\n    this.closer.onclick = function () {\n      self.overlay.setPosition(undefined);\n      self.closer.blur();\n      return false;\n    };\n    this.map.addOverlay(this.overlay);\n\n    // const coordinate = [118.82210323395667, 31.79037236271944];\n    // // self.content.innerHTML = '';\n    // self.overlay.setPosition(coordinate);\n    this.map.on('click', function (evt) {\n      const coordinate = evt.coordinate;\n      // self.content.innerHTML = '';\n      self.overlay.setPosition(coordinate);\n    });\n  }\n\n}\n","import { NgModule } from '@angular/core';\r\nimport { FullScreenComponent } from './controls/full-screen/full-screen.component';\r\nimport { FullExtentComponent } from './controls/full-extent/full-extent.component';\r\n\r\nimport { SwiperModule } from 'ngx-swiper-wrapper';\r\nimport { SWIPER_CONFIG } from 'ngx-swiper-wrapper';\r\nimport { SwiperConfigInterface } from 'ngx-swiper-wrapper';\r\nimport { SwitcherMapComponent } from './controls/switcher-map/switcher-map.component';\r\nimport { ZoomMapComponent } from './controls/zoom-map/zoom-map.component';\r\nimport { MapComponent } from './map/map.component';\r\nimport { LayerControlPc1Component } from './controls/layer-control-pc1/layer-control-pc1.component';\r\nimport { LayerControlPc2Component } from './controls/layer-control-pc2/layer-control-pc2.component';\r\nimport { LayerControlPc3Component } from './controls/layer-control-pc3/layer-control-pc3.component';\r\nimport { PointLayerComponent } from './layers/point-layer/point-layer.component';\r\nimport { LineLayerComponent } from './layers/line-layer/line-layer.component';\r\nimport { PolygonLayerComponent } from './layers/polygon-layer/polygon-layer.component';\r\nimport { CompassComponent } from './common/compass/compass.component';\r\nimport { HeatmapLegendComponent } from './common/heatmap-legend/heatmap-legend.component';\r\nimport { ScenicLegendComponent } from './common/scenic-legend/scenic-legend.component';\r\nimport { ScenicBoxComponent } from './information-box/scenic-box/scenic-box.component';\r\nimport { SpotBoxComponent } from './information-box/spot-box/spot-box.component';\r\n\r\n\r\nconst DEFAULT_SWIPER_CONFIG: SwiperConfigInterface = {\r\n  direction: 'horizontal',\r\n  slidesPerView: 'auto'\r\n};\r\n@NgModule({\r\n  declarations: [\r\n    FullExtentComponent,\r\n    FullScreenComponent,\r\n    SwitcherMapComponent,\r\n    ZoomMapComponent,\r\n    MapComponent,\r\n    LayerControlPc1Component,\r\n    LayerControlPc2Component,\r\n    LayerControlPc3Component,\r\n    PointLayerComponent,\r\n    LineLayerComponent,\r\n    PolygonLayerComponent,\r\n    CompassComponent,\r\n    HeatmapLegendComponent,\r\n    ScenicLegendComponent,\r\n    ScenicBoxComponent,\r\n    SpotBoxComponent\r\n  ],\r\n  imports: [SwiperModule],\r\n  providers: [\r\n    {\r\n      provide: SWIPER_CONFIG,\r\n      useValue: DEFAULT_SWIPER_CONFIG\r\n    }\r\n  ],\r\n  exports: [\r\n    FullExtentComponent,\r\n    FullScreenComponent,\r\n    SwitcherMapComponent,\r\n    ZoomMapComponent,\r\n    MapComponent,\r\n    LayerControlPc1Component,\r\n    LayerControlPc2Component,\r\n    LayerControlPc3Component,\r\n    PointLayerComponent,\r\n    LineLayerComponent,\r\n    PolygonLayerComponent,\r\n    CompassComponent,\r\n    HeatmapLegendComponent,\r\n    ScenicLegendComponent,\r\n    ScenicBoxComponent,\r\n    SpotBoxComponent\r\n  ]\r\n})\r\nexport class TgipOpenlayersModule { }\r\n"]}